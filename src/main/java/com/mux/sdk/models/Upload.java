/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mux.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mux.sdk.models.CreateAssetRequest;
import com.mux.sdk.models.UploadError;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Upload
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Upload {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TIMEOUT = "timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  private Integer timeout = 3600;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    WAITING("waiting"),
    
    ASSET_CREATED("asset_created"),
    
    ERRORED("errored"),
    
    CANCELLED("cancelled"),
    
    TIMED_OUT("timed_out");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_NEW_ASSET_SETTINGS = "new_asset_settings";
  @SerializedName(SERIALIZED_NAME_NEW_ASSET_SETTINGS)
  private CreateAssetRequest newAssetSettings;

  public static final String SERIALIZED_NAME_ASSET_ID = "asset_id";
  @SerializedName(SERIALIZED_NAME_ASSET_ID)
  private String assetId;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private UploadError error;

  public static final String SERIALIZED_NAME_CORS_ORIGIN = "cors_origin";
  @SerializedName(SERIALIZED_NAME_CORS_ORIGIN)
  private String corsOrigin;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_TEST = "test";
  @SerializedName(SERIALIZED_NAME_TEST)
  private Boolean test;


  public Upload id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the Direct Upload.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for the Direct Upload.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Upload timeout(Integer timeout) {
    
    this.timeout = timeout;
    return this;
  }

   /**
   * Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked &#x60;timed_out&#x60;
   * minimum: 60
   * maximum: 604800
   * @return timeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`")

  public Integer getTimeout() {
    return timeout;
  }


  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }


  public Upload status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Upload newAssetSettings(CreateAssetRequest newAssetSettings) {
    
    this.newAssetSettings = newAssetSettings;
    return this;
  }

   /**
   * Get newAssetSettings
   * @return newAssetSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CreateAssetRequest getNewAssetSettings() {
    return newAssetSettings;
  }


  public void setNewAssetSettings(CreateAssetRequest newAssetSettings) {
    this.newAssetSettings = newAssetSettings;
  }


  public Upload assetId(String assetId) {
    
    this.assetId = assetId;
    return this;
  }

   /**
   * Only set once the upload is in the &#x60;asset_created&#x60; state.
   * @return assetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Only set once the upload is in the `asset_created` state.")

  public String getAssetId() {
    return assetId;
  }


  public void setAssetId(String assetId) {
    this.assetId = assetId;
  }


  public Upload error(UploadError error) {
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UploadError getError() {
    return error;
  }


  public void setError(UploadError error) {
    this.error = error;
  }


  public Upload corsOrigin(String corsOrigin) {
    
    this.corsOrigin = corsOrigin;
    return this;
  }

   /**
   * If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers.
   * @return corsOrigin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers.")

  public String getCorsOrigin() {
    return corsOrigin;
  }


  public void setCorsOrigin(String corsOrigin) {
    this.corsOrigin = corsOrigin;
  }


  public Upload url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The URL to upload the associated source media to.
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL to upload the associated source media to.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public Upload test(Boolean test) {
    
    this.test = test;
    return this;
  }

   /**
   * Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a &#x60;test&#x60; Asset.
   * @return test
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset.")

  public Boolean getTest() {
    return test;
  }


  public void setTest(Boolean test) {
    this.test = test;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Upload upload = (Upload) o;
    return Objects.equals(this.id, upload.id) &&
        Objects.equals(this.timeout, upload.timeout) &&
        Objects.equals(this.status, upload.status) &&
        Objects.equals(this.newAssetSettings, upload.newAssetSettings) &&
        Objects.equals(this.assetId, upload.assetId) &&
        Objects.equals(this.error, upload.error) &&
        Objects.equals(this.corsOrigin, upload.corsOrigin) &&
        Objects.equals(this.url, upload.url) &&
        Objects.equals(this.test, upload.test);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, timeout, status, newAssetSettings, assetId, error, corsOrigin, url, test);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Upload {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    newAssetSettings: ").append(toIndentedString(newAssetSettings)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    corsOrigin: ").append(toIndentedString(corsOrigin)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    test: ").append(toIndentedString(test)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

