/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mux.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Annotation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Annotation {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private java.util.UUID id;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private OffsetDateTime date;

  public static final String SERIALIZED_NAME_SUB_PROPERTY_ID = "sub_property_id";
  @SerializedName(SERIALIZED_NAME_SUB_PROPERTY_ID)
  private String subPropertyId;


  public Annotation id(java.util.UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the annotation
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for the annotation")

  public java.util.UUID getId() {
    return id;
  }


  public void setId(java.util.UUID id) {
    this.id = id;
  }


  public Annotation note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * The annotation note content
   * @return note
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The annotation note content")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public Annotation date(OffsetDateTime date) {
    
    this.date = date;
    return this;
  }

   /**
   * Datetime when the annotation applies
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Datetime when the annotation applies")

  public OffsetDateTime getDate() {
    return date;
  }


  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public Annotation subPropertyId(String subPropertyId) {
    
    this.subPropertyId = subPropertyId;
    return this;
  }

   /**
   * Customer-defined sub-property identifier
   * @return subPropertyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer-defined sub-property identifier")

  public String getSubPropertyId() {
    return subPropertyId;
  }


  public void setSubPropertyId(String subPropertyId) {
    this.subPropertyId = subPropertyId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Annotation annotation = (Annotation) o;
    return Objects.equals(this.id, annotation.id) &&
        Objects.equals(this.note, annotation.note) &&
        Objects.equals(this.date, annotation.date) &&
        Objects.equals(this.subPropertyId, annotation.subPropertyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, note, date, subPropertyId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Annotation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    subPropertyId: ").append(toIndentedString(subPropertyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

