/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mux.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mux.sdk.models.MonitoringHistogramTimeseriesBucketValues;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * MonitoringHistogramTimeseriesDatapoint
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MonitoringHistogramTimeseriesDatapoint {
  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private String timestamp;

  public static final String SERIALIZED_NAME_SUM = "sum";
  @SerializedName(SERIALIZED_NAME_SUM)
  private Long sum;

  public static final String SERIALIZED_NAME_P95 = "p95";
  @SerializedName(SERIALIZED_NAME_P95)
  private Double p95;

  public static final String SERIALIZED_NAME_MEDIAN = "median";
  @SerializedName(SERIALIZED_NAME_MEDIAN)
  private Double median;

  public static final String SERIALIZED_NAME_MAX_PERCENTAGE = "max_percentage";
  @SerializedName(SERIALIZED_NAME_MAX_PERCENTAGE)
  private Double maxPercentage;

  public static final String SERIALIZED_NAME_BUCKET_VALUES = "bucket_values";
  @SerializedName(SERIALIZED_NAME_BUCKET_VALUES)
  private java.util.List<MonitoringHistogramTimeseriesBucketValues> bucketValues = null;

  public static final String SERIALIZED_NAME_AVERAGE = "average";
  @SerializedName(SERIALIZED_NAME_AVERAGE)
  private Double average;


  public MonitoringHistogramTimeseriesDatapoint timestamp(String timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  public MonitoringHistogramTimeseriesDatapoint sum(Long sum) {
    
    this.sum = sum;
    return this;
  }

   /**
   * Get sum
   * @return sum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getSum() {
    return sum;
  }


  public void setSum(Long sum) {
    this.sum = sum;
  }


  public MonitoringHistogramTimeseriesDatapoint p95(Double p95) {
    
    this.p95 = p95;
    return this;
  }

   /**
   * Get p95
   * @return p95
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getP95() {
    return p95;
  }


  public void setP95(Double p95) {
    this.p95 = p95;
  }


  public MonitoringHistogramTimeseriesDatapoint median(Double median) {
    
    this.median = median;
    return this;
  }

   /**
   * Get median
   * @return median
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getMedian() {
    return median;
  }


  public void setMedian(Double median) {
    this.median = median;
  }


  public MonitoringHistogramTimeseriesDatapoint maxPercentage(Double maxPercentage) {
    
    this.maxPercentage = maxPercentage;
    return this;
  }

   /**
   * Get maxPercentage
   * @return maxPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getMaxPercentage() {
    return maxPercentage;
  }


  public void setMaxPercentage(Double maxPercentage) {
    this.maxPercentage = maxPercentage;
  }


  public MonitoringHistogramTimeseriesDatapoint bucketValues(java.util.List<MonitoringHistogramTimeseriesBucketValues> bucketValues) {
    
    this.bucketValues = bucketValues;
    return this;
  }

  public MonitoringHistogramTimeseriesDatapoint addBucketValuesItem(MonitoringHistogramTimeseriesBucketValues bucketValuesItem) {
    if (this.bucketValues == null) {
      this.bucketValues = new java.util.ArrayList<>();
    }
    this.bucketValues.add(bucketValuesItem);
    return this;
  }

   /**
   * Get bucketValues
   * @return bucketValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public java.util.List<MonitoringHistogramTimeseriesBucketValues> getBucketValues() {
    return bucketValues;
  }


  public void setBucketValues(java.util.List<MonitoringHistogramTimeseriesBucketValues> bucketValues) {
    this.bucketValues = bucketValues;
  }


  public MonitoringHistogramTimeseriesDatapoint average(Double average) {
    
    this.average = average;
    return this;
  }

   /**
   * Get average
   * @return average
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAverage() {
    return average;
  }


  public void setAverage(Double average) {
    this.average = average;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MonitoringHistogramTimeseriesDatapoint monitoringHistogramTimeseriesDatapoint = (MonitoringHistogramTimeseriesDatapoint) o;
    return Objects.equals(this.timestamp, monitoringHistogramTimeseriesDatapoint.timestamp) &&
        Objects.equals(this.sum, monitoringHistogramTimeseriesDatapoint.sum) &&
        Objects.equals(this.p95, monitoringHistogramTimeseriesDatapoint.p95) &&
        Objects.equals(this.median, monitoringHistogramTimeseriesDatapoint.median) &&
        Objects.equals(this.maxPercentage, monitoringHistogramTimeseriesDatapoint.maxPercentage) &&
        Objects.equals(this.bucketValues, monitoringHistogramTimeseriesDatapoint.bucketValues) &&
        Objects.equals(this.average, monitoringHistogramTimeseriesDatapoint.average);
  }

  @Override
  public int hashCode() {
    return Objects.hash(timestamp, sum, p95, median, maxPercentage, bucketValues, average);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MonitoringHistogramTimeseriesDatapoint {\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    sum: ").append(toIndentedString(sum)).append("\n");
    sb.append("    p95: ").append(toIndentedString(p95)).append("\n");
    sb.append("    median: ").append(toIndentedString(median)).append("\n");
    sb.append("    maxPercentage: ").append(toIndentedString(maxPercentage)).append("\n");
    sb.append("    bucketValues: ").append(toIndentedString(bucketValues)).append("\n");
    sb.append("    average: ").append(toIndentedString(average)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

