/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.
 *
 * The version of the OpenAPI document: v1
 * Contact: devex@mux.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mux.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Describes the Asset or LiveStream object associated with the playback ID.
 */
@ApiModel(description = "Describes the Asset or LiveStream object associated with the playback ID.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-03-15T16:07:59.745206-04:00[America/New_York]")
public class GetAssetOrLiveStreamIdResponseDataObject {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  /**
   * Identifies the object type associated with the playback ID.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ASSET("asset"),
    
    LIVE_STREAM("live_stream");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;


  public GetAssetOrLiveStreamIdResponseDataObject id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The identifier of the object.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifier of the object.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public GetAssetOrLiveStreamIdResponseDataObject type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Identifies the object type associated with the playback ID.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the object type associated with the playback ID.")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAssetOrLiveStreamIdResponseDataObject getAssetOrLiveStreamIdResponseDataObject = (GetAssetOrLiveStreamIdResponseDataObject) o;
    return Objects.equals(this.id, getAssetOrLiveStreamIdResponseDataObject.id) &&
        Objects.equals(this.type, getAssetOrLiveStreamIdResponseDataObject.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAssetOrLiveStreamIdResponseDataObject {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

