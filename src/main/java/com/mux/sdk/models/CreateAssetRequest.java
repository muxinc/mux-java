/*
 * Mux API
 * Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mux.sdk.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mux.sdk.models.InputSettings;
import com.mux.sdk.models.PlaybackPolicy;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CreateAssetRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-19T15:36:24.532302-04:00[America/New_York]")
public class CreateAssetRequest {
  public static final String SERIALIZED_NAME_INPUT = "input";
  @SerializedName(SERIALIZED_NAME_INPUT)
  private java.util.List<InputSettings> input = null;

  public static final String SERIALIZED_NAME_PLAYBACK_POLICY = "playback_policy";
  @SerializedName(SERIALIZED_NAME_PLAYBACK_POLICY)
  private java.util.List<PlaybackPolicy> playbackPolicy = null;

  public static final String SERIALIZED_NAME_PER_TITLE_ENCODE = "per_title_encode";
  @SerializedName(SERIALIZED_NAME_PER_TITLE_ENCODE)
  private Boolean perTitleEncode;

  public static final String SERIALIZED_NAME_PASSTHROUGH = "passthrough";
  @SerializedName(SERIALIZED_NAME_PASSTHROUGH)
  private String passthrough;

  /**
   * Specify what level (if any) of support for mp4 playback. In most cases you should use our default HLS-based streaming playback ({playback_id}.m3u8) which can automatically adjust to viewers&#39; connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](/guides/video/download-your-videos) for more information.
   */
  @JsonAdapter(Mp4SupportEnum.Adapter.class)
  public enum Mp4SupportEnum {
    NONE("none"),
    
    STANDARD("standard");

    private String value;

    Mp4SupportEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static Mp4SupportEnum fromValue(String value) {
      for (Mp4SupportEnum b : Mp4SupportEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<Mp4SupportEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final Mp4SupportEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public Mp4SupportEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return Mp4SupportEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_MP4_SUPPORT = "mp4_support";
  @SerializedName(SERIALIZED_NAME_MP4_SUPPORT)
  private Mp4SupportEnum mp4Support;

  public static final String SERIALIZED_NAME_NORMALIZE_AUDIO = "normalize_audio";
  @SerializedName(SERIALIZED_NAME_NORMALIZE_AUDIO)
  private Boolean normalizeAudio = false;

  /**
   * Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](/guides/video/download-your-videos) for more information.
   */
  @JsonAdapter(MasterAccessEnum.Adapter.class)
  public enum MasterAccessEnum {
    NONE("none"),
    
    TEMPORARY("temporary");

    private String value;

    MasterAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MasterAccessEnum fromValue(String value) {
      for (MasterAccessEnum b : MasterAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MasterAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MasterAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MasterAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MasterAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_MASTER_ACCESS = "master_access";
  @SerializedName(SERIALIZED_NAME_MASTER_ACCESS)
  private MasterAccessEnum masterAccess;

  public static final String SERIALIZED_NAME_TEST = "test";
  @SerializedName(SERIALIZED_NAME_TEST)
  private Boolean test;


  public CreateAssetRequest input(java.util.List<InputSettings> input) {
    
    this.input = input;
    return this;
  }

  public CreateAssetRequest addInputItem(InputSettings inputItem) {
    if (this.input == null) {
      this.input = new java.util.ArrayList<>();
    }
    this.input.add(inputItem);
    return this;
  }

   /**
   * An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See &#x60;input[].url&#x60; for requirements.
   * @return input
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.")

  public java.util.List<InputSettings> getInput() {
    return input;
  }


  public void setInput(java.util.List<InputSettings> input) {
    this.input = input;
  }


  public CreateAssetRequest playbackPolicy(java.util.List<PlaybackPolicy> playbackPolicy) {
    
    this.playbackPolicy = playbackPolicy;
    return this;
  }

  public CreateAssetRequest addPlaybackPolicyItem(PlaybackPolicy playbackPolicyItem) {
    if (this.playbackPolicy == null) {
      this.playbackPolicy = new java.util.ArrayList<>();
    }
    this.playbackPolicy.add(playbackPolicyItem);
    return this;
  }

   /**
   * An array of playback policy names that you want applied to this asset and available through &#x60;playback_ids&#x60;. Options include: &#x60;\&quot;public\&quot;&#x60; (anyone with the playback URL can stream the asset). And &#x60;\&quot;signed\&quot;&#x60; (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.
   * @return playbackPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\"public\"` (anyone with the playback URL can stream the asset). And `\"signed\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy.")

  public java.util.List<PlaybackPolicy> getPlaybackPolicy() {
    return playbackPolicy;
  }


  public void setPlaybackPolicy(java.util.List<PlaybackPolicy> playbackPolicy) {
    this.playbackPolicy = playbackPolicy;
  }


  public CreateAssetRequest perTitleEncode(Boolean perTitleEncode) {
    
    this.perTitleEncode = perTitleEncode;
    return this;
  }

   /**
   * Get perTitleEncode
   * @return perTitleEncode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPerTitleEncode() {
    return perTitleEncode;
  }


  public void setPerTitleEncode(Boolean perTitleEncode) {
    this.perTitleEncode = perTitleEncode;
  }


  public CreateAssetRequest passthrough(String passthrough) {
    
    this.passthrough = passthrough;
    return this;
  }

   /**
   * Arbitrary metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**.
   * @return passthrough
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Arbitrary metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**.")

  public String getPassthrough() {
    return passthrough;
  }


  public void setPassthrough(String passthrough) {
    this.passthrough = passthrough;
  }


  public CreateAssetRequest mp4Support(Mp4SupportEnum mp4Support) {
    
    this.mp4Support = mp4Support;
    return this;
  }

   /**
   * Specify what level (if any) of support for mp4 playback. In most cases you should use our default HLS-based streaming playback ({playback_id}.m3u8) which can automatically adjust to viewers&#39; connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](/guides/video/download-your-videos) for more information.
   * @return mp4Support
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specify what level (if any) of support for mp4 playback. In most cases you should use our default HLS-based streaming playback ({playback_id}.m3u8) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](/guides/video/download-your-videos) for more information.")

  public Mp4SupportEnum getMp4Support() {
    return mp4Support;
  }


  public void setMp4Support(Mp4SupportEnum mp4Support) {
    this.mp4Support = mp4Support;
  }


  public CreateAssetRequest normalizeAudio(Boolean normalizeAudio) {
    
    this.normalizeAudio = normalizeAudio;
    return this;
  }

   /**
   * Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.
   * @return normalizeAudio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.")

  public Boolean getNormalizeAudio() {
    return normalizeAudio;
  }


  public void setNormalizeAudio(Boolean normalizeAudio) {
    this.normalizeAudio = normalizeAudio;
  }


  public CreateAssetRequest masterAccess(MasterAccessEnum masterAccess) {
    
    this.masterAccess = masterAccess;
    return this;
  }

   /**
   * Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](/guides/video/download-your-videos) for more information.
   * @return masterAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](/guides/video/download-your-videos) for more information.")

  public MasterAccessEnum getMasterAccess() {
    return masterAccess;
  }


  public void setMasterAccess(MasterAccessEnum masterAccess) {
    this.masterAccess = masterAccess;
  }


  public CreateAssetRequest test(Boolean test) {
    
    this.test = test;
    return this;
  }

   /**
   * Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs.
   * @return test
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs.")

  public Boolean getTest() {
    return test;
  }


  public void setTest(Boolean test) {
    this.test = test;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAssetRequest createAssetRequest = (CreateAssetRequest) o;
    return Objects.equals(this.input, createAssetRequest.input) &&
        Objects.equals(this.playbackPolicy, createAssetRequest.playbackPolicy) &&
        Objects.equals(this.perTitleEncode, createAssetRequest.perTitleEncode) &&
        Objects.equals(this.passthrough, createAssetRequest.passthrough) &&
        Objects.equals(this.mp4Support, createAssetRequest.mp4Support) &&
        Objects.equals(this.normalizeAudio, createAssetRequest.normalizeAudio) &&
        Objects.equals(this.masterAccess, createAssetRequest.masterAccess) &&
        Objects.equals(this.test, createAssetRequest.test);
  }

  @Override
  public int hashCode() {
    return Objects.hash(input, playbackPolicy, perTitleEncode, passthrough, mp4Support, normalizeAudio, masterAccess, test);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAssetRequest {\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    playbackPolicy: ").append(toIndentedString(playbackPolicy)).append("\n");
    sb.append("    perTitleEncode: ").append(toIndentedString(perTitleEncode)).append("\n");
    sb.append("    passthrough: ").append(toIndentedString(passthrough)).append("\n");
    sb.append("    mp4Support: ").append(toIndentedString(mp4Support)).append("\n");
    sb.append("    normalizeAudio: ").append(toIndentedString(normalizeAudio)).append("\n");
    sb.append("    masterAccess: ").append(toIndentedString(masterAccess)).append("\n");
    sb.append("    test: ").append(toIndentedString(test)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

