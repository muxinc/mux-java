x-group-parameters: true\n
{
  "openapi": "3.0.3",
  "info": {
    "title": "Mux API",
    "description": "Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.",
    "version": "v1",
    "contact": {
      "name": "Mux DevEx",
      "url": "https://docs.mux.com",
      "email": "devex@mux.com"
    }
  },
  "servers": [
    {
      "url": "https://api.mux.com",
      "description": "Mux Production Environment"
    }
  ],
  "paths": {
    "/video/v1/assets": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create an asset",
        "description": "Create a new Mux Video asset.",
        "operationId": "create-asset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssetRequest"
              },
              "example": {
                "input": "https://muxed.s3.amazonaws.com/leds.mp4",
                "playback_policy": [
                  "public"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Asset Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                },
                "example": {
                  "data": {
                    "status": "preparing",
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW"
                      }
                    ],
                    "mp4_support": "none",
                    "master_access": "none",
                    "id": "SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv",
                    "created_at": "1607452572"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "List assets",
        "description": "List all Mux assets.",
        "operationId": "list-assets",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/list_asset_live_stream_id"
          },
          {
            "$ref": "#/components/parameters/list_asset_upload_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAssetsResponse"
                },
                "example": {
                  "data": [
                    {
                      "tracks": [
                        {
                          "type": "video",
                          "max_width": 1920,
                          "max_height": 800,
                          "max_frame_rate": 24,
                          "id": "HK01Bq7FrEQmIu3QpRiZZ98HQOOZjm6BYyg17eEunlyo",
                          "duration": 734.166667
                        },
                        {
                          "type": "audio",
                          "max_channels": 2,
                          "max_channel_layout": "stereo",
                          "id": "nNKHJqw2G9cE019AoK16CJr3O27gGnbtW4w525hJWqWw",
                          "duration": 734.143991
                        }
                      ],
                      "status": "ready",
                      "playback_ids": [
                        {
                          "policy": "public",
                          "id": "85g23gYz7NmQu02YsY81ihuod6cZMxCp017ZrfglyLCKc"
                        }
                      ],
                      "mp4_support": "none",
                      "max_stored_resolution": "HD",
                      "max_stored_frame_rate": 24,
                      "master_access": "none",
                      "id": "8jd7M77xQgf2NzuocJRPYdSdEfY5dLlcRwFARtgQqU4",
                      "duration": 734.25,
                      "created_at": "1609869152",
                      "aspect_ratio": "12:5"
                    },
                    {
                      "tracks": [
                        {
                          "type": "video",
                          "max_width": 1920,
                          "max_height": 1080,
                          "max_frame_rate": 29.97,
                          "id": "RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4",
                          "duration": 23.8238
                        },
                        {
                          "type": "audio",
                          "max_channels": 2,
                          "max_channel_layout": "stereo",
                          "id": "LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg",
                          "duration": 23.823792
                        }
                      ],
                      "status": "ready",
                      "playback_ids": [
                        {
                          "policy": "public",
                          "id": "vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I"
                        }
                      ],
                      "mp4_support": "none",
                      "max_stored_resolution": "HD",
                      "max_stored_frame_rate": 29.97,
                      "master_access": "none",
                      "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                      "duration": 23.857167,
                      "created_at": "1609868768",
                      "aspect_ratio": "16:9"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve an asset",
        "description": "Retrieves the details of an asset that has previously been created. Supply the unique asset ID that was returned from your previous request, and Mux will return the corresponding asset information. The same information is returned when creating an asset.",
        "operationId": "get-asset",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                },
                "example": {
                  "data": {
                    "tracks": [
                      {
                        "type": "video",
                        "max_width": 1920,
                        "max_height": 1080,
                        "max_frame_rate": 29.97,
                        "id": "RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4",
                        "duration": 23.8238
                      },
                      {
                        "type": "audio",
                        "max_channels": 2,
                        "max_channel_layout": "stereo",
                        "id": "LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg",
                        "duration": 23.823792
                      }
                    ],
                    "status": "ready",
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I"
                      }
                    ],
                    "mp4_support": "none",
                    "max_stored_resolution": "HD",
                    "max_stored_frame_rate": 29.97,
                    "master_access": "none",
                    "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                    "duration": 23.857167,
                    "created_at": "1609868768",
                    "aspect_ratio": "16:9"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete an asset",
        "description": "Deletes a video asset and all its data.",
        "operationId": "delete-asset",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Assets"
        ],
        "summary": "Update an Asset",
        "description": "Updates the details of an already-created Asset with the provided Asset ID. This currently supports only the `passthrough` field.",
        "operationId": "update-asset",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetRequest"
              },
              "example": {
                "passthrough": "Example"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                },
                "example": {
                  "data": {
                    "tracks": [
                      {
                        "type": "video",
                        "max_width": 1920,
                        "max_height": 1080,
                        "max_frame_rate": 29.97,
                        "id": "RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4",
                        "duration": 23.8238
                      },
                      {
                        "type": "audio",
                        "max_channels": 2,
                        "max_channel_layout": "stereo",
                        "id": "LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg",
                        "duration": 23.823792
                      }
                    ],
                    "status": "ready",
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I"
                      }
                    ],
                    "mp4_support": "none",
                    "max_stored_resolution": "HD",
                    "max_stored_frame_rate": 29.97,
                    "master_access": "none",
                    "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                    "duration": 23.857167,
                    "created_at": "1609868768",
                    "updated_at": "1609869000",
                    "aspect_ratio": "16:9",
                    "passthrough": "Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/input-info": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve asset input info",
        "description": "Returns a list of the input objects that were used to create the asset along with any settings that were applied to each input.",
        "operationId": "get-asset-input-info",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetInputInfoResponse"
                },
                "example": {
                  "data": [
                    {
                      "settings": {
                        "url": "https://muxed.s3.amazonaws.com/leds.mp4"
                      },
                      "file": {
                        "container_format": "mp4",
                        "tracks": [
                          {
                            "type": "video",
                            "duration": 120,
                            "width": 1280,
                            "height": 720,
                            "frame_rate": 30,
                            "encoding": "h.264"
                          },
                          {
                            "type": "audio",
                            "duration": 120,
                            "sample_rate": 16000,
                            "sample_size": 24,
                            "encoding": "aac"
                          }
                        ]
                      }
                    },
                    {
                      "settings": {
                        "url": "https://example.com/myVideo_en.srt"
                      },
                      "file": {
                        "container_format": "srt"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/playback-ids": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create a playback ID",
        "description": "",
        "operationId": "create-asset-playback-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlaybackIDRequest"
              },
              "example": {
                "policy": "public"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlaybackIDResponse"
                },
                "example": {
                  "data": {
                    "policy": "public",
                    "id": "Lj02VZDorh9hCV00flNqPli8fmwf6KEppug01w8zDEYVlQ"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/playback-ids/{PLAYBACK_ID}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve a playback ID",
        "description": "",
        "operationId": "get-asset-playback-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          },
          {
            "$ref": "#/components/parameters/playback_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetPlaybackIDResponse"
                },
                "example": {
                  "data": {
                    "policy": "public",
                    "id": "vAFLI2eKFFicXX00iHBS2vqt5JjJGg5HV6fQ4Xijgt1I"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete a playback ID",
        "description": "",
        "operationId": "delete-asset-playback-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          },
          {
            "$ref": "#/components/parameters/playback_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/mp4-support": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update MP4 support",
        "operationId": "update-asset-mp4-support",
        "description": "Allows you to add or remove mp4 support for assets that were created without it. Currently there are two values supported in this request, `standard` and `none`. `none` means that an asset *does not* have mp4 support, so submitting a request with `mp4_support` set to `none` will delete the mp4 assets from the asset in question.",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetMP4SupportRequest"
              },
              "example": {
                "mp4_support": "standard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                },
                "example": {
                  "data": {
                    "tracks": [
                      {
                        "type": "video",
                        "max_width": 1920,
                        "max_height": 1080,
                        "max_frame_rate": 29.97,
                        "id": "RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4",
                        "duration": 23.8238
                      },
                      {
                        "type": "audio",
                        "max_channels": 2,
                        "max_channel_layout": "stereo",
                        "id": "LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg",
                        "duration": 23.823792
                      }
                    ],
                    "status": "ready",
                    "static_renditions": {
                      "status": "preparing"
                    },
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "Lj02VZDorh9hCV00flNqPli8fmwf6KEppug01w8zDEYVlQ"
                      }
                    ],
                    "mp4_support": "standard",
                    "max_stored_resolution": "HD",
                    "max_stored_frame_rate": 29.97,
                    "master_access": "none",
                    "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                    "duration": 23.857167,
                    "created_at": "1609868768",
                    "aspect_ratio": "16:9"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/master-access": {
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update master access",
        "operationId": "update-asset-master-access",
        "description": "Allows you to add temporary access to the master (highest-quality) version of the asset in MP4 format. A URL will be created that can be used to download the master version for 24 hours. After 24 hours Master Access will revert to \"none\".\nThis master version is not optimized for web and not meant to be streamed, only downloaded for purposes like archiving or editing the video offline.",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetMasterAccessRequest"
              },
              "example": {
                "master_access": "temporary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                },
                "example": {
                  "data": {
                    "tracks": [
                      {
                        "type": "video",
                        "max_width": 1920,
                        "max_height": 1080,
                        "max_frame_rate": 29.97,
                        "id": "RiyQPM31a1SPtfI802bEP2zD02F5FQVNL801FRHeE5t01G4",
                        "duration": 23.8238
                      },
                      {
                        "type": "audio",
                        "max_channels": 2,
                        "max_channel_layout": "stereo",
                        "id": "LvINTciHVoC017knMCH01y9pSi5OrDLCRaBPNDAoNJcmg",
                        "duration": 23.823792
                      }
                    ],
                    "status": "ready",
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "Lj02VZDorh9hCV00flNqPli8fmwf6KEppug01w8zDEYVlQ"
                      }
                    ],
                    "mp4_support": "none",
                    "max_stored_resolution": "HD",
                    "max_stored_frame_rate": 29.97,
                    "master_access": "temporary",
                    "master": {
                      "status": "preparing"
                    },
                    "id": "lJ4bGGsp7ZlPf02nMg015W02iHQLN9XnuuLRBsPS00xqd68",
                    "duration": 23.857167,
                    "created_at": "1609868768",
                    "aspect_ratio": "16:9"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/tracks": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create an asset track",
        "description": "",
        "operationId": "create-asset-track",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackRequest"
              },
              "example": {
                "url": "https://example.com/myVideo_en.srt",
                "type": "text",
                "text_type": "subtitles",
                "language_code": "en-US",
                "name": "English",
                "closed_captions": true,
                "passthrough": "English"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTrackResponse"
                },
                "example": {
                  "data": {
                    "type": "text",
                    "text_type": "subtitles",
                    "status": "preparing",
                    "passthrough": "English",
                    "name": "English",
                    "language_code": "en-US",
                    "id": "xBe7u01029ipxBLQhYzZCJ1cke01zCkuUsgnYtH0017nNzbpv2YcsoMDmw",
                    "closed_captions": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/assets/{ASSET_ID}/tracks/{TRACK_ID}": {
      "delete": {
        "tags": [
          "Assets"
        ],
        "summary": "Delete an asset track",
        "description": "Removes a text track from an asset. Audio and video tracks on assets cannot be removed.",
        "operationId": "delete-asset-track",
        "parameters": [
          {
            "$ref": "#/components/parameters/asset_id"
          },
          {
            "$ref": "#/components/parameters/track_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/live-streams": {
      "post": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Create a live stream",
        "description": "",
        "operationId": "create-live-stream",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLiveStreamRequest"
              },
              "example": {
                "playback_policy": "public",
                "new_asset_settings": {
                  "playback_policy": "public"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveStreamResponse"
                },
                "example": {
                  "data": {
                    "stream_key": "abcdefgh",
                    "status": "idle",
                    "reconnect_window": 60,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "latency_mode": "standard",
                    "max_continuous_duration": 43200
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Live Streams"
        ],
        "summary": "List live streams",
        "description": "",
        "operationId": "list-live-streams",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/stream_key"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter response to return live streams with the specified status only",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LiveStreamStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLiveStreamsResponse"
                },
                "example": {
                  "data": [
                    {
                      "stream_key": "831b5bde-cd8a-5bc4-115d-4ba34b19f481",
                      "status": "idle",
                      "reconnect_window": 60,
                      "playback_ids": [
                        {
                          "policy": "public",
                          "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                        }
                      ],
                      "new_asset_settings": {
                        "playback_policies": [
                          "public"
                        ]
                      },
                      "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                      "created_at": "1609937654",
                      "max_continuous_duration": 43200
                    },
                    {
                      "stream_key": "d273c65e-1fc8-27dc-e9ef-56144cbceb3a",
                      "status": "idle",
                      "reconnect_window": 60,
                      "recent_asset_ids": [
                        "SZs02xxHgYdkHp00OSCjJiHUHqzVQZNU332XPXRxe341o",
                        "e4J9cwb5tjVxMeeV8201dC00i800ThPKKGT2SEN002dHH2s"
                      ],
                      "playback_ids": [
                        {
                          "policy": "public",
                          "id": "00zOcribkUmXqXHzBTpflk2771BRTcKATqPjWf7JHpuM"
                        }
                      ],
                      "new_asset_settings": {
                        "playback_policies": [
                          "public"
                        ]
                      },
                      "id": "B65hEUWW01ErVKDDGImKcBquYhwEAkjW6Ic3lPY0299Cc",
                      "created_at": "1607587513",
                      "max_continuous_duration": 43200
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}": {
      "get": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Retrieve a live stream",
        "description": "Retrieves the details of a live stream that has previously been created. Supply the unique live stream ID that was returned from your previous request, and Mux will return the corresponding live stream information. The same information is returned when creating a live stream.",
        "operationId": "get-live-stream",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveStreamResponse"
                },
                "example": {
                  "data": {
                    "stream_key": "831b5bde-cd8a-5bc4-115d-4ba34b19f481",
                    "status": "idle",
                    "reconnect_window": 60,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "max_continuous_duration": 43200
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Delete a live stream",
        "description": "",
        "operationId": "delete-live-stream",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Update a live stream",
        "description": "Updates the parameters of a previously-created live stream. This currently supports a subset of variables. Supply the live stream ID and the updated parameters and Mux will return the corresponding live stream information. The information returned will be the same after update as for subsequent get live stream requests.",
        "operationId": "update-live-stream",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLiveStreamRequest"
              },
              "example": {
                "latency_mode": "standard",
                "reconnect_window": 30,
                "max_continuous_duration": 1200
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveStreamResponse"
                },
                "example": {
                  "data": {
                    "stream_key": "831b5bde-cd8a-5bc4-115d-4ba34b19f481",
                    "status": "idle",
                    "reconnect_window": 30,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "latency_mode": "standard",
                    "max_continuous_duration": 1200
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/playback-ids": {
      "post": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Create a live stream playback ID",
        "description": "",
        "operationId": "create-live-stream-playback-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlaybackIDRequest"
              },
              "example": {
                "policy": "signed"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlaybackIDResponse"
                },
                "example": {
                  "data": {
                    "policy": "public",
                    "id": "4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/playback-ids/{PLAYBACK_ID}": {
      "get": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Retrieve a live stream playback ID",
        "description": "",
        "operationId": "get-live-stream-playback-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          },
          {
            "$ref": "#/components/parameters/playback_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLiveStreamPlaybackIDResponse"
                },
                "example": {
                  "data": {
                    "policy": "public",
                    "id": "4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Delete a live stream playback ID",
        "description": "",
        "operationId": "delete-live-stream-playback-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          },
          {
            "$ref": "#/components/parameters/playback_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/reset-stream-key": {
      "post": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Reset a live stream’s stream key",
        "description": "Reset a live stream key if you want to immediately stop the current stream key from working and create a new stream key that can be used for future broadcasts.",
        "operationId": "reset-stream-key",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveStreamResponse"
                },
                "example": {
                  "data": {
                    "stream_key": "acaf2ca1-ba9c-5ffe-8c9c-a02bbf0009a6",
                    "status": "idle",
                    "reconnect_window": 60,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      },
                      {
                        "policy": "public",
                        "id": "4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "max_continuous_duration": 43200
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/complete": {
      "put": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Signal a live stream is finished",
        "description": "(Optional) End the live stream recording immediately instead of waiting for the reconnect_window. `EXT-X-ENDLIST` tag is added to the HLS manifest which notifies the player that this live stream is over.\n\nMux does not close the encoder connection immediately. Encoders are often configured to re-establish connections immediately which would result in a new recorded asset. For this reason, Mux waits for 60s before closing the connection with the encoder. This 60s timeframe is meant to give encoder operators a chance to disconnect from their end.\n",
        "operationId": "signal-live-stream-complete",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalLiveStreamCompleteResponse"
                },
                "example": {
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/disable": {
      "put": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Disable a live stream",
        "description": "Disables a live stream, making it reject incoming RTMP streams until re-enabled. The API also ends the live stream recording immediately when active. Ending the live stream recording adds the `EXT-X-ENDLIST` tag to the HLS manifest which notifies the player that this live stream is over.\n\nMux also closes the encoder connection immediately. Any attempt from the encoder to re-establish connection will fail till the live stream is re-enabled.\n",
        "operationId": "disable-live-stream",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisableLiveStreamResponse"
                },
                "example": {
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/enable": {
      "put": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Enable a live stream",
        "description": "Enables a live stream, allowing it to accept an incoming RTMP stream.",
        "operationId": "enable-live-stream",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnableLiveStreamResponse"
                },
                "example": {
                  "data": {}
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/embedded-subtitles": {
      "put": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Update a live stream's embedded subtitles",
        "description": "Configures a live stream to receive embedded closed captions.\nThe resulting Asset's subtitle text track will have `closed_captions: true` set.\n",
        "operationId": "update-live-stream-embedded-subtitles",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLiveStreamEmbeddedSubtitlesRequest"
              },
              "example": {
                "embedded_subtitles": [
                  {
                    "passthrough": "Example"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiveStreamResponse"
                },
                "example": {
                  "data": {
                    "stream_key": "acaf2ca1-ba9c-5ffe-8c9c-a02bbf0009a6",
                    "status": "idle",
                    "reconnect_window": 60,
                    "playback_ids": [
                      {
                        "policy": "public",
                        "id": "HNRDuwff3K2VjTZZAPuvd2Kx6D01XUQFv02GFBHPUka018"
                      },
                      {
                        "policy": "public",
                        "id": "4O902oOPU100s7XIQgOeY01U7dHzYlBe26zi3Sq01EJqnxw"
                      }
                    ],
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ]
                    },
                    "id": "ZEBrNTpHC02iUah025KM3te6ylM7W4S4silsrFtUkn3Ag",
                    "created_at": "1609937654",
                    "embedded_subtitles": [
                      {
                        "name": "English CC",
                        "language_code": "en",
                        "language_channel": "cc1",
                        "passthrough": "Example"
                      }
                    ],
                    "max_continuous_duration": 43200
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/playback-ids/{PLAYBACK_ID}": {
      "get": {
        "tags": [
          "Playback ID"
        ],
        "summary": "Retrieve an Asset or Live Stream ID",
        "description": "Retrieves the Identifier of the Asset or Live Stream associated with the Playback ID.",
        "operationId": "get-asset-or-livestream-id",
        "parameters": [
          {
            "$ref": "#/components/parameters/playback_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetOrLiveStreamIdResponse"
                },
                "example": {
                  "data": {
                    "id": "a1B2c3D4e5F6g7H8i9",
                    "policy": "public",
                    "object": {
                      "type": "asset",
                      "id": "123456789012345678"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/simulcast-targets": {
      "post": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Create a live stream simulcast target",
        "description": "Create a simulcast target for the parent live stream. Simulcast target can only be created when the parent live stream is in idle state. Only one simulcast target can be created at a time with this API.",
        "operationId": "create-live-stream-simulcast-target",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSimulcastTargetRequest"
              },
              "example": {
                "url": "rtmp://live.example.com/app",
                "stream_key": "abcdefgh",
                "passthrough": "Example"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimulcastTargetResponse"
                },
                "example": {
                  "data": {
                    "url": "rtmp://live.example.com/app",
                    "stream_key": "abcdefgh",
                    "status": "idle",
                    "passthrough": "Example",
                    "id": "le1axfGDc9ETqh6trHNTxGQ9XEhj02fOnX0200aAh24fwlmwzqKCYNJgw"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/live-streams/{LIVE_STREAM_ID}/simulcast-targets/{SIMULCAST_TARGET_ID}": {
      "delete": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Delete a Live Stream Simulcast Target",
        "description": "Delete the simulcast target using the simulcast target ID returned when creating the simulcast target. Simulcast Target can only be deleted when the parent live stream is in idle state.",
        "operationId": "delete-live-stream-simulcast-target",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          },
          {
            "$ref": "#/components/parameters/simulcast_target_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Live Streams"
        ],
        "summary": "Retrieve a Live Stream Simulcast Target",
        "description": "Retrieves the details of the simulcast target created for the parent live stream. Supply the unique live stream ID and simulcast target ID that was returned in the response of create simulcast target request, and Mux will return the corresponding information.",
        "operationId": "get-live-stream-simulcast-target",
        "parameters": [
          {
            "$ref": "#/components/parameters/livestream_id"
          },
          {
            "$ref": "#/components/parameters/simulcast_target_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimulcastTargetResponse"
                },
                "example": {
                  "data": {
                    "url": "rtmp://live.example.com/app",
                    "stream_key": "abcdefgh",
                    "status": "idle",
                    "passthrough": "Example",
                    "id": "02FU00rPq00fC9S6kygrqlxygGMdpW1lk00BkFpCfc2kGregEIr7brt7CQ"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/signing-keys": {
      "post": {
        "tags": [
          "URL Signing Keys"
        ],
        "summary": "Create a URL signing key",
        "description": "Creates a new signing key pair. When creating a new signing key, the API will generate a 2048-bit RSA key-pair and return the private key and a generated key-id; the public key will be stored at Mux to validate signed tokens.",
        "operationId": "create-url-signing-key",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigningKeyResponse"
                },
                "example": {
                  "data": {
                    "private_key": "abcd123=",
                    "id": "vI5KTQ78ohYriuvWKHY6COtZWXexHGLllxksOdZuya8",
                    "created_at": "1610108345"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "URL Signing Keys"
        ],
        "summary": "List URL signing keys",
        "description": "Returns a list of URL signing keys.",
        "operationId": "list-url-signing-keys",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSigningKeysResponse"
                },
                "example": {
                  "data": [
                    {
                      "id": "vI5KTQ78ohYriuvWKHY6COtZWXexHGLllxksOdZuya8",
                      "created_at": "1610108345"
                    },
                    {
                      "id": "jc6lJiCLMjyC202EXtRQ644sShzDv6x5tWJrbvUFpvmo",
                      "created_at": "1608632647"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/signing-keys/{SIGNING_KEY_ID}": {
      "get": {
        "tags": [
          "URL Signing Keys"
        ],
        "summary": "Retrieve a URL signing key",
        "description": "Retrieves the details of a URL signing key that has previously\nbeen created. Supply the unique signing key ID that was returned from your\nprevious request, and Mux will return the corresponding signing key information.\n**The private key is not returned in this response.**\n",
        "operationId": "get-url-signing-key",
        "parameters": [
          {
            "$ref": "#/components/parameters/signing_key_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigningKeyResponse"
                },
                "example": {
                  "data": {
                    "id": "jc6lJiCLMjyC202EXtRQ644sShzDv6x5tWJrbvUFpvmo",
                    "created_at": "1608632647"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "URL Signing Keys"
        ],
        "summary": "Delete a URL signing key",
        "description": "Deletes an existing signing key. Use with caution, as this will invalidate any existing signatures and no URLs can be signed using the key again.",
        "operationId": "delete-url-signing-key",
        "parameters": [
          {
            "$ref": "#/components/parameters/signing_key_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/video/v1/uploads": {
      "post": {
        "operationId": "create-direct-upload",
        "summary": "Create a new direct upload URL",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUploadRequest"
              },
              "example": {
                "cors_origin": "https://example.com/",
                "new_asset_settings": {
                  "playback_policy": [
                    "public"
                  ],
                  "mp4_support": "standard"
                }
              }
            }
          }
        },
        "tags": [
          "Direct Uploads"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                },
                "example": [
                  {
                    "url": "https://storage.googleapis.com/video-storage-us-east1-uploads/zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc?Expires=1610112458&GoogleAccessId=mux-direct-upload%40mux-cloud.iam.gserviceaccount.com&Signature=LCu4PMoKUo%2BJkWQAUwB9WU4bWVVfW3K5bZxSxEptBz3DrjbFxNyGvs0sriyJupZh9Jdb6FxKWFIRbxEetfnAAiesOvSPH%2F1GlIichmGg3YfebfxiX77%2B6ToFF6FMkJucBo284PD90AVLHhKagOea2VsbdO0fh78MAxGH9sEspyQ2uJEfYWjHFqYQ9smJyIuM3CYOmN5HKPgRWy2yUqzV7OTMe%2FivPO4%2FX6XiiN2J4nTmy83252CJUsHIvbiGctfKxcNI6b23UVN4B1tJTVgyxTOZiBQCkMLkD%2FEe5OhoAkvJgkqENRr0q3swO0IChDDWjrh7OTMwqvWGwAoVXEGiHg%3D%3D&upload_id=ABg5-UznTdib1HhOAMjdHhWIYqBbwmSYM6dVKyPe3v33uTeEE8gkN5QzvR3cei6uSZOSrjPn7bdvvDH3nhsrLBq8AjWY2qE4UQ",
                    "timeout": 3600,
                    "status": "waiting",
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ],
                      "mp4_support": "standard"
                    },
                    "id": "zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc",
                    "cors_origin": "https://example.com/"
                  }
                ]
              }
            }
          }
        }
      },
      "get": {
        "operationId": "list-direct-uploads",
        "summary": "List direct uploads",
        "tags": [
          "Direct Uploads"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUploadsResponse"
                },
                "example": {
                  "data": [
                    {
                      "url": "https://storage.googleapis.com/video-storage-us-east1-uploads/zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc?Expires=1610112458&GoogleAccessId=mux-direct-upload%40mux-cloud.iam.gserviceaccount.com&Signature=LCu4PMoKUo%2BJkWQAUwB9WU4bWVVfW3K5bZxSxEptBz3DrjbFxNyGvs0sriyJupZh9Jdb6FxKWFIRbxEetfnAAiesOvSPH%2F1GlIichmGg3YfebfxiX77%2B6ToFF6FMkJucBo284PD90AVLHhKagOea2VsbdO0fh78MAxGH9sEspyQ2uJEfYWjHFqYQ9smJyIuM3CYOmN5HKPgRWy2yUqzV7OTMe%2FivPO4%2FX6XiiN2J4nTmy83252CJUsHIvbiGctfKxcNI6b23UVN4B1tJTVgyxTOZiBQCkMLkD%2FEe5OhoAkvJgkqENRr0q3swO0IChDDWjrh7OTMwqvWGwAoVXEGiHg%3D%3D&upload_id=ABg5-UznTdib1HhOAMjdHhWIYqBbwmSYM6dVKyPe3v33uTeEE8gkN5QzvR3cei6uSZOSrjPn7bdvvDH3nhsrLBq8AjWY2qE4UQ",
                      "timeout": 3600,
                      "status": "waiting",
                      "new_asset_settings": {
                        "playback_policies": [
                          "public"
                        ],
                        "mp4_support": "standard"
                      },
                      "id": "zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc",
                      "cors_origin": "https://example.com/"
                    },
                    {
                      "timeout": 3600,
                      "status": "asset_created",
                      "new_asset_settings": {
                        "playback_policies": [
                          "public"
                        ],
                        "mp4_support": "standard"
                      },
                      "id": "YzoCL01HHOtAVYq4Ds9zekdHJ2XqL9e8ukPWbr01KhtvM",
                      "asset_id": "AnFVqAVXfb7vVL3ypSQDMnJZunnb8nkwe02O00p2gK8P00"
                    },
                    {
                      "timeout": 10800,
                      "status": "cancelled",
                      "new_asset_settings": {
                        "playback_policies": [
                          "public"
                        ],
                        "mp4_support": "standard"
                      },
                      "id": "AZcWu0201SqVW01LMdmVxE00m3gEWUFZPItvni1sTqF800dQ"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/uploads/{UPLOAD_ID}": {
      "get": {
        "operationId": "get-direct-upload",
        "summary": "Retrieve a single direct upload's info",
        "tags": [
          "Direct Uploads"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/upload_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                },
                "example": {
                  "data": {
                    "timeout": 3600,
                    "status": "asset_created",
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ],
                      "mp4_support": "standard"
                    },
                    "id": "YzoCL01HHOtAVYq4Ds9zekdHJ2XqL9e8ukPWbr01KhtvM",
                    "asset_id": "AnFVqAVXfb7vVL3ypSQDMnJZunnb8nkwe02O00p2gK8P00"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/uploads/{UPLOAD_ID}/cancel": {
      "put": {
        "operationId": "cancel-direct-upload",
        "summary": "Cancel a direct upload",
        "description": "Cancels a direct upload and marks it as cancelled. If a pending upload finishes after this\nrequest, no asset will be created. This request will only succeed if the upload is still in\nthe `waiting` state.\n",
        "tags": [
          "Direct Uploads"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/upload_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                },
                "example": {
                  "data": {
                    "timeout": 3600,
                    "status": "cancelled",
                    "new_asset_settings": {
                      "playback_policies": [
                        "public"
                      ],
                      "mp4_support": "standard"
                    },
                    "id": "zd01Pe2bNpYhxbrwYABgFE01twZdtv4M00kts2i02GhbGjc",
                    "cors_origin": "https://example.com/"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Cancellation no longer possible"
          }
        }
      }
    },
    "/video/v1/delivery-usage": {
      "get": {
        "tags": [
          "Delivery Usage"
        ],
        "summary": "List Usage",
        "description": "Returns a list of delivery usage records and their associated Asset IDs or Live Stream IDs.",
        "operationId": "list-delivery-usage",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/delivery_usage_limit"
          },
          {
            "$ref": "#/components/parameters/delivery_usage_asset_id"
          },
          {
            "$ref": "#/components/parameters/delivery_usage_live_stream_id"
          },
          {
            "$ref": "#/components/parameters/delivery_usage_timeframe"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDeliveryUsageResponse"
                },
                "example": {
                  "total_row_count": 2,
                  "timeframe": [
                    1607817600,
                    1607990400
                  ],
                  "page": 1,
                  "limit": 100,
                  "data": [
                    {
                      "live_stream_id": "B65hEUWW01ErVKDDGImKcBquYhwEAkjW6Ic3lPY0299Cc",
                      "delivered_seconds": 206.366667,
                      "deleted_at": "1607945257",
                      "created_at": "1607939184",
                      "asset_state": "deleted",
                      "asset_id": "Ww4v2q2H4MNbHIAM2wApKb3cmrh7eHjGLUjdKohR5wM",
                      "asset_duration": 154.366667
                    },
                    {
                      "delivered_seconds": 30,
                      "deleted_at": "1607935288",
                      "created_at": "1607617107",
                      "asset_state": "deleted",
                      "asset_id": "Qlb007on1TwN43XLIG027QJlUxm3jd01v5PRi1aXhnyFZY",
                      "asset_duration": 98.773667
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/playback-restrictions": {
      "post": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "Create a Playback Restriction",
        "description": "Create a new Playback Restriction.",
        "operationId": "create-playback-restriction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlaybackRestrictionRequest"
              },
              "example": {
                "referrer": {
                  "allowed_domains": [
                    "*.example.com"
                  ],
                  "allow_no_referrer": true
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaybackRestrictionResponse"
                },
                "example": {
                  "data": {
                    "id": "9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O",
                    "updated_at": "1607945257",
                    "created_at": "1607945257",
                    "referrer": {
                      "allowed_domains": [
                        "*.example.com"
                      ],
                      "allow_no_referrer": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "List Playback Restrictions",
        "description": "Returns a list of all Playback Restrictions.",
        "operationId": "list-playback-restrictions",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPlaybackRestrictionsResponse"
                },
                "example": {
                  "total_row_count": 2,
                  "page": 1,
                  "limit": 100,
                  "data": [
                    {
                      "id": "9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O",
                      "updated_at": "1607945257",
                      "created_at": "1607939184",
                      "referrer": {
                        "allowed_domains": [
                          "*.example.com"
                        ],
                        "allow_no_referrer": false
                      }
                    },
                    {
                      "id": "012uTQqPygDYWz3jey8cyOX9n01Bd5SDH1",
                      "updated_at": "1607945980",
                      "created_at": "1607939188",
                      "referrer": {
                        "allowed_domains": [
                          "a.example.com",
                          "b.example.com"
                        ],
                        "allow_no_referrer": true
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/playback-restrictions/{PLAYBACK_RESTRICTION_ID}": {
      "delete": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "Delete a Playback Restriction",
        "description": "Deletes a single Playback Restriction.",
        "operationId": "delete-playback-restriction",
        "parameters": [
          {
            "$ref": "#/components/parameters/playback_restriction_id"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "Retrieve a Playback Restriction",
        "description": "Retrieves a Playback Restriction associated with the unique identifier.",
        "operationId": "get-playback-restriction",
        "parameters": [
          {
            "$ref": "#/components/parameters/playback_restriction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaybackRestrictionResponse"
                },
                "example": {
                  "data": {
                    "id": "9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O",
                    "updated_at": "1607945257",
                    "created_at": "1607939184",
                    "referrer": {
                      "allowed_domains": [
                        "*.example.com"
                      ],
                      "allow_no_referrer": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/video/v1/playback-restrictions/{PLAYBACK_RESTRICTION_ID}/referrer": {
      "put": {
        "tags": [
          "Playback Restrictions"
        ],
        "summary": "Update the Referrer Playback Restriction",
        "description": "Allows you to modify the list of domains or change how Mux validates playback requests without the `Referer` HTTP header. The Referrer restriction fully replaces the old list with this new list of domains.",
        "operationId": "update-referrer-domain-restriction",
        "parameters": [
          {
            "$ref": "#/components/parameters/playback_restriction_id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReferrerDomainRestrictionRequest"
              },
              "example": {
                "allowed_domains": [
                  "*.example.com"
                ],
                "allow_no_referrer": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaybackRestrictionResponse"
                },
                "example": {
                  "data": {
                    "id": "9dbEg8o00uqQzZbzJT6NXdqNA00SdnSo8O",
                    "updated_at": "1607945257",
                    "created_at": "1607939184",
                    "referrer": {
                      "allowed_domains": [
                        "*.example.com"
                      ],
                      "allow_no_referrer": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/video-views": {
      "get": {
        "tags": [
          "Video Views"
        ],
        "summary": "List Video Views",
        "description": "Returns a list of video views.",
        "operationId": "list-video-views",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/viewer_id"
          },
          {
            "$ref": "#/components/parameters/error_id"
          },
          {
            "$ref": "#/components/parameters/order_direction"
          },
          {
            "$ref": "#/components/parameters/filters"
          },
          {
            "$ref": "#/components/parameters/timeframe"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVideoViewsResponse"
                },
                "example": {
                  "total_row_count": 4,
                  "timeframe": [
                    1610025789,
                    1610112189
                  ],
                  "data": [
                    {
                      "viewer_os_family": "OS X",
                      "viewer_application_name": "Chrome",
                      "view_start": "2021-01-07T20:34:06Z",
                      "view_end": "2021-01-07T20:46:04Z",
                      "video_title": "my-title",
                      "total_row_count": 4,
                      "player_error_message": null,
                      "player_error_code": null,
                      "id": "JpA81zBfGaGZ85C6aGF3bptyD4CKwpdNgamr",
                      "error_type_id": null,
                      "country_code": "US"
                    },
                    {
                      "viewer_os_family": "OS X",
                      "viewer_application_name": "Chrome",
                      "view_start": "2021-01-07T20:21:53Z",
                      "view_end": "2021-01-07T20:34:03Z",
                      "video_title": "",
                      "total_row_count": 4,
                      "player_error_message": null,
                      "player_error_code": null,
                      "id": "jPVLR5giYMrLYbHM88Tkn3cM3qCRDk0jL114",
                      "error_type_id": null,
                      "country_code": "US"
                    },
                    {
                      "viewer_os_family": "OS X",
                      "viewer_application_name": "Chrome",
                      "view_start": "2021-01-07T15:16:06Z",
                      "view_end": "2021-01-07T15:17:06Z",
                      "video_title": "Video Test Title 12.14.20",
                      "total_row_count": 4,
                      "player_error_message": null,
                      "player_error_code": null,
                      "id": "pdLDVKBuPZJJ9YsPVmtmB9FG9gsWBWMmYar4",
                      "error_type_id": null,
                      "country_code": "US"
                    },
                    {
                      "viewer_os_family": "OS X",
                      "viewer_application_name": "Chrome",
                      "view_start": "2021-01-07T15:15:09Z",
                      "view_end": "2021-01-07T15:15:17Z",
                      "video_title": "Video Test Title 12.14.20",
                      "total_row_count": 4,
                      "player_error_message": null,
                      "player_error_code": null,
                      "id": "zbZPowWtD3z54jcGMLCJJpF79zCjB03bV7o8",
                      "error_type_id": null,
                      "country_code": "US"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/video-views/{VIDEO_VIEW_ID}": {
      "get": {
        "tags": [
          "Video Views"
        ],
        "summary": "Get a Video View",
        "description": "Returns the details of a video view.",
        "operationId": "get-video-view",
        "parameters": [
          {
            "$ref": "#/components/parameters/video_view_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoViewResponse"
                },
                "example": {
                  "total_row_count": null,
                  "timeframe": [
                    1643133378,
                    1643219778
                  ],
                  "data": {
                    "view_end": "2022-01-26T17:56:12Z",
                    "viewer_device_model": "iPhone10,4",
                    "viewer_os_version": "15.1",
                    "video_id": "rmp7fvw5lPD01l8PZ2aN74js84XrTWxHy",
                    "view_playing_time": "58134",
                    "exit_before_video_start": false,
                    "player_mux_plugin_name": "apple-mux",
                    "view_max_downscale_percentage": "0.32222223",
                    "country_name": "United States",
                    "view_id": "8d00a0ca-8456-4e55-9ff8-dc501814a6b1",
                    "view_start": "2022-01-26T17:08:18Z",
                    "view_max_playhead_position": "41126",
                    "player_source_host_name": "stream.mux.com",
                    "player_error_code": null,
                    "player_source_url": "https://stream.mux.com/ax9qwyTIaUDLdmhesYDKir5kfE4Ve215.m3u8",
                    "city": "Austin",
                    "view_max_upscale_percentage": "0",
                    "asset_id": "rmp7fvw5lPD01l8PZ2aN74js84XrTWxHy",
                    "events": [
                      {
                        "viewer_time": 1643216891851,
                        "playback_time": 0,
                        "name": "playerready",
                        "event_time": 1643216898061
                      },
                      {
                        "viewer_time": 1643216891853,
                        "playback_time": 0,
                        "name": "viewstart",
                        "event_time": 1643216898101
                      }
                    ],
                    "view_total_content_playback_time": 37521,
                    "asn": 11427,
                    "weighted_average_bitrate": 697078
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/errors": {
      "get": {
        "tags": [
          "Errors"
        ],
        "summary": "List Errors",
        "description": "Returns a list of errors.",
        "operationId": "list-errors",
        "parameters": [
          {
            "$ref": "#/components/parameters/filters"
          },
          {
            "$ref": "#/components/parameters/timeframe"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListErrorsResponse"
                },
                "example": {
                  "total_row_count": null,
                  "timeframe": [
                    1610027061,
                    1610113461
                  ],
                  "data": [
                    {
                      "percentage": null,
                      "notes": null,
                      "message": null,
                      "last_seen": "2021-01-08T13:42:39Z",
                      "id": null,
                      "description": null,
                      "count": 1,
                      "code": 100
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/filters": {
      "get": {
        "deprecated": true,
        "tags": [
          "Filters"
        ],
        "summary": "List Filters",
        "description": "The API has been replaced by the list-dimensions API call.\n\nLists all the filters broken out into basic and advanced.\n",
        "operationId": "list-filters",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFiltersResponse"
                },
                "example": {
                  "total_row_count": null,
                  "timeframe": [
                    1610027251,
                    1610113651
                  ],
                  "data": {
                    "basic": [
                      "browser",
                      "operating_system",
                      "player_remote_played",
                      "player_software",
                      "player_software_version",
                      "player_mux_plugin_name",
                      "player_mux_plugin_version",
                      "player_autoplay",
                      "player_preload",
                      "video_title",
                      "video_id",
                      "stream_type",
                      "source_type",
                      "source_hostname",
                      "continent_code",
                      "country",
                      "player_error_code"
                    ],
                    "advanced": [
                      "browser_version",
                      "operating_system_version",
                      "viewer_device_name",
                      "viewer_device_model",
                      "viewer_device_category",
                      "viewer_device_manufacturer",
                      "player_name",
                      "player_version",
                      "video_series",
                      "video_encoding_variant",
                      "experiment_name",
                      "sub_property_id",
                      "asn",
                      "cdn",
                      "viewer_connection_type",
                      "view_session_id",
                      "region",
                      "viewer_user_id",
                      "exit_before_video_start",
                      "preroll_ad_asset_hostname",
                      "preroll_ad_tag_hostname",
                      "preroll_played",
                      "preroll_requested"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/filters/{FILTER_ID}": {
      "get": {
        "deprecated": true,
        "tags": [
          "Filters"
        ],
        "summary": "Lists values for a specific filter",
        "description": "The API has been replaced by the list-dimension-values API call.\n\nLists the values for a filter along with a total count of related views.\n",
        "operationId": "list-filter-values",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter_id"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/filters"
          },
          {
            "$ref": "#/components/parameters/timeframe"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFilterValuesResponse"
                },
                "example": {
                  "total_row_count": 1,
                  "timeframe": [
                    1610028123,
                    1610114523
                  ],
                  "data": [
                    {
                      "value": "Chrome",
                      "total_count": 5
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/dimensions": {
      "get": {
        "tags": [
          "Dimensions"
        ],
        "summary": "List Dimensions",
        "description": "List all available dimensions.\n\nNote: This API replaces the list-filters API call.\n",
        "operationId": "list-dimensions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDimensionsResponse"
                },
                "example": {
                  "data": {
                    "advanced": [
                      "browser_version",
                      "operating_system_version",
                      "viewer_device_name",
                      "viewer_device_model",
                      "viewer_device_category",
                      "viewer_device_manufacturer",
                      "player_name",
                      "player_version",
                      "video_series",
                      "video_encoding_variant",
                      "experiment_name",
                      "sub_property_id",
                      "asn",
                      "cdn",
                      "viewer_connection_type",
                      "view_session_id",
                      "region",
                      "viewer_user_id",
                      "exit_before_video_start",
                      "preroll_ad_asset_hostname",
                      "preroll_ad_tag_hostname",
                      "preroll_played",
                      "preroll_requested"
                    ],
                    "basic": [
                      "browser",
                      "operating_system",
                      "player_remote_played",
                      "player_software",
                      "player_software_version",
                      "player_mux_plugin_name",
                      "player_mux_plugin_version",
                      "player_autoplay",
                      "player_preload",
                      "video_title",
                      "video_id",
                      "stream_type",
                      "source_type",
                      "source_hostname",
                      "continent_code",
                      "country",
                      "player_error_code"
                    ]
                  },
                  "timeframe": [
                    1610033879,
                    1610120279
                  ],
                  "total_row_count": null
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/dimensions/{DIMENSION_ID}": {
      "get": {
        "tags": [
          "Dimensions"
        ],
        "summary": "Lists the values for a specific dimension",
        "description": "Lists the values for a dimension along with a total count of related views.\n\nNote: This API replaces the list-filter-values API call.\n",
        "operationId": "list-dimension-values",
        "parameters": [
          {
            "$ref": "#/components/parameters/dimension_id"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/filters"
          },
          {
            "$ref": "#/components/parameters/timeframe"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDimensionValuesResponse"
                },
                "example": {
                  "data": [
                    {
                      "total_count": 10000,
                      "value": "FR"
                    },
                    {
                      "total_count": 5000,
                      "value": "ES"
                    },
                    {
                      "total_count": 2000,
                      "value": "PT"
                    },
                    {
                      "total_count": 100,
                      "value": "DE"
                    },
                    {
                      "total_count": 1,
                      "value": "BE"
                    }
                  ],
                  "timeframe": [
                    1610033976,
                    1610120376
                  ],
                  "total_row_count": 5
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/exports": {
      "get": {
        "deprecated": true,
        "tags": [
          "Exports"
        ],
        "summary": "List property video view export links",
        "description": "The API has been replaced by the list-exports-views API call.\n\nLists the available video view exports along with URLs to retrieve them.\n",
        "operationId": "list-exports",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExportsResponse"
                },
                "example": {
                  "total_row_count": 10,
                  "timeframe": [
                    1610024528,
                    1610110928
                  ],
                  "data": [
                    "https://s3.amazonaws.com/mux-data-exports/1/2021_01_01.csv.gz?...signature...",
                    "https://s3.amazonaws.com/mux-data-exports/1/2021_01_02.csv.gz?...signature...",
                    "https://s3.amazonaws.com/mux-data-exports/1/2021_01_03.csv.gz?...signature..."
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/exports/views": {
      "get": {
        "tags": [
          "Exports"
        ],
        "summary": "List available property view exports",
        "description": "Lists the available video view exports along with URLs to retrieve them.",
        "operationId": "list-exports-views",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListVideoViewExportsResponse"
                },
                "example": {
                  "total_row_count": 7,
                  "timeframe": [
                    1626296941,
                    1626383341
                  ],
                  "data": [
                    {
                      "files": [
                        {
                          "version": 2,
                          "type": "csv",
                          "path": "https://s3.amazonaws.com/mux-data-exports/1/2021_01_03.csv.gz?...signature..."
                        }
                      ],
                      "export_date": "2021-01-03"
                    },
                    {
                      "files": [
                        {
                          "version": 2,
                          "type": "csv",
                          "path": "https://s3.amazonaws.com/mux-data-exports/1/2021_01_02.csv.gz?...signature..."
                        }
                      ],
                      "export_date": "2021-01-02"
                    },
                    {
                      "files": [
                        {
                          "version": 2,
                          "type": "csv",
                          "path": "https://s3.amazonaws.com/mux-data-exports/1/2021_01_01.csv.gz?...signature..."
                        }
                      ],
                      "export_date": "2021-01-01"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/metrics/{METRIC_ID}/breakdown": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "List breakdown values",
        "description": "List the breakdown values for a specific metric.",
        "operationId": "list-breakdown-values",
        "parameters": [
          {
            "$ref": "#/components/parameters/metric_id"
          },
          {
            "$ref": "#/components/parameters/group_by"
          },
          {
            "$ref": "#/components/parameters/measurement"
          },
          {
            "$ref": "#/components/parameters/filters"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/order_direction"
          },
          {
            "$ref": "#/components/parameters/timeframe"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBreakdownValuesResponse"
                },
                "example": {
                  "total_row_count": 1,
                  "timeframe": [
                    1610028298,
                    1610114698
                  ],
                  "meta": {
                    "aggregation": "view_end"
                  },
                  "data": [
                    {
                      "views": 5,
                      "value": 4,
                      "total_watch_time": 513934,
                      "total_playing_time": 413934,
                      "negative_impact": 1,
                      "field": "US"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/metrics/{METRIC_ID}/overall": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get Overall values",
        "description": "Returns the overall value for a specific metric, as well as the total view count, watch time, and the Mux Global metric value for the metric.",
        "operationId": "get-overall-values",
        "parameters": [
          {
            "$ref": "#/components/parameters/metric_id"
          },
          {
            "$ref": "#/components/parameters/timeframe"
          },
          {
            "$ref": "#/components/parameters/filters"
          },
          {
            "$ref": "#/components/parameters/measurement"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOverallValuesResponse"
                },
                "example": {
                  "total_row_count": null,
                  "timeframe": [
                    1610029525,
                    1610115925
                  ],
                  "meta": {
                    "aggregation": "view_end"
                  },
                  "data": {
                    "value": 4,
                    "total_watch_time": 513934,
                    "total_playing_time": 413934,
                    "total_views": 5,
                    "global_value": 1169.1832095168065
                  }
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/metrics/{METRIC_ID}/insights": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "List Insights",
        "description": "Returns a list of insights for a metric. These are the worst performing values across all breakdowns sorted by how much they negatively impact a specific metric.",
        "operationId": "list-insights",
        "parameters": [
          {
            "$ref": "#/components/parameters/metric_id"
          },
          {
            "$ref": "#/components/parameters/measurement"
          },
          {
            "$ref": "#/components/parameters/order_direction_deprecated"
          },
          {
            "$ref": "#/components/parameters/timeframe"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInsightsResponse"
                },
                "example": {
                  "total_row_count": 18,
                  "timeframe": [
                    1610029610,
                    1610116010
                  ],
                  "meta": {
                    "aggregation": "view_end"
                  },
                  "data": [
                    {
                      "total_watch_time": 351144,
                      "total_playing_time": 341144,
                      "total_views": 1,
                      "negative_impact_score": -5,
                      "metric": 9,
                      "filter_value": "",
                      "filter_column": "video_title"
                    },
                    {
                      "total_watch_time": 513934,
                      "total_views": 5,
                      "negative_impact_score": 0,
                      "metric": 4,
                      "filter_value": "US",
                      "filter_column": "country"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/metrics/{METRIC_ID}/timeseries": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get metric timeseries data",
        "description": "Returns timeseries data for a specific metric.\n\nEach interval represented in the data array contains an array with the following values:\n  * the first element is the interval time\n  * the second element is the calculated metric value \n  * the third element is the number of views in the interval that have a valid metric value\n",
        "operationId": "get-metric-timeseries-data",
        "parameters": [
          {
            "$ref": "#/components/parameters/metric_id"
          },
          {
            "$ref": "#/components/parameters/timeframe"
          },
          {
            "$ref": "#/components/parameters/filters"
          },
          {
            "$ref": "#/components/parameters/measurement"
          },
          {
            "$ref": "#/components/parameters/order_direction"
          },
          {
            "$ref": "#/components/parameters/timeseries_group_by"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricTimeseriesDataResponse"
                },
                "example": {
                  "total_row_count": 2,
                  "timeframe": [
                    1610029711,
                    1610116111
                  ],
                  "meta": {
                    "aggregation": "view_end"
                  },
                  "data": [
                    [
                      "2021-01-07T14:00:00Z",
                      0.8743536882994202,
                      154240
                    ],
                    [
                      "2021-01-07T15:00:00Z",
                      0.89291050559114,
                      156056
                    ]
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/metrics/comparison": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "List all metric values",
        "description": "List all of the values across every breakdown for a specific metric.",
        "operationId": "list-all-metric-values",
        "parameters": [
          {
            "$ref": "#/components/parameters/timeframe"
          },
          {
            "$ref": "#/components/parameters/filters"
          },
          {
            "$ref": "#/components/parameters/dimension"
          },
          {
            "$ref": "#/components/parameters/value"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAllMetricValuesResponse"
                },
                "example": {
                  "total_row_count": null,
                  "timeframe": [
                    1610029906,
                    1610116306
                  ],
                  "data": [
                    {
                      "watch_time": 513934,
                      "view_count": 5,
                      "started_views": 6,
                      "ended_views": 5,
                      "unique_viewers": 6,
                      "total_playing_time": 503934,
                      "name": "totals"
                    },
                    {
                      "value": 6,
                      "type": "number",
                      "name": "Views",
                      "metric": "views",
                      "items": [
                        {
                          "value": 6,
                          "type": "number",
                          "name": "Unique Viewers",
                          "metric": "unique_viewers"
                        },
                        {
                          "value": 503934,
                          "type": "milliseconds",
                          "name": "Playing Time",
                          "metric": "playing_time"
                        }
                      ]
                    },
                    {
                      "value": 0.7803472280502319,
                      "type": "score",
                      "name": "Overall Score",
                      "metric": "viewer_experience_score"
                    },
                    {
                      "value": 0.8,
                      "type": "score",
                      "name": "Playback Failure Score",
                      "metric": "playback_failure_score",
                      "items": [
                        {
                          "value": 0.2,
                          "type": "percentage",
                          "name": "Playback Failure Percentage",
                          "metric": "playback_failure_percentage"
                        }
                      ]
                    },
                    {
                      "value": 0.9991008877754212,
                      "type": "score",
                      "name": "Startup Time Score",
                      "metric": "startup_time_score",
                      "items": [
                        {
                          "value": 4,
                          "type": "milliseconds",
                          "name": "Video Startup Time (median)",
                          "metric": "video_startup_time",
                          "measurement": "median"
                        },
                        {
                          "value": 9,
                          "type": "milliseconds",
                          "name": "Video Startup Time (95th %)",
                          "metric": "video_startup_time",
                          "measurement": "95th"
                        },
                        {
                          "value": 52.5625,
                          "type": "milliseconds",
                          "name": "Player Startup Time (median)",
                          "metric": "player_startup_time",
                          "measurement": "median"
                        },
                        {
                          "value": 60.0625,
                          "type": "milliseconds",
                          "name": "Player Startup Time (95th %)",
                          "metric": "player_startup_time",
                          "measurement": "95th"
                        },
                        {
                          "value": 122.37890625,
                          "type": "milliseconds",
                          "name": "Page Load Time (median)",
                          "metric": "page_load_time",
                          "measurement": "median"
                        },
                        {
                          "value": 264.0625,
                          "type": "milliseconds",
                          "name": "Page Load Time (95th %)",
                          "metric": "page_load_time",
                          "measurement": "95th"
                        },
                        {
                          "value": 182.25,
                          "type": "milliseconds",
                          "name": "Aggregate Startup Time (median)",
                          "metric": "aggregate_startup_time",
                          "measurement": "median"
                        },
                        {
                          "value": 319.515625,
                          "type": "milliseconds",
                          "name": "Aggregate Startup Time (95th %)",
                          "metric": "aggregate_startup_time",
                          "measurement": "95th"
                        },
                        {
                          "value": 3042,
                          "type": "milliseconds",
                          "name": "Seek Latency",
                          "metric": "seek_latency"
                        },
                        {
                          "value": 0,
                          "type": "percentage",
                          "name": "Exits Before Video Start",
                          "metric": "exits_before_video_start"
                        }
                      ]
                    },
                    {
                      "value": 0.9523247838020324,
                      "type": "score",
                      "name": "Rebuffer Score",
                      "metric": "rebuffer_score",
                      "items": [
                        {
                          "value": 0.0005564916895943838,
                          "type": "percentage",
                          "name": "Rebuffer Percentage",
                          "metric": "rebuffer_percentage"
                        },
                        {
                          "value": 0.11674650830651406,
                          "type": "per_minute",
                          "name": "Rebuffer Frequency",
                          "metric": "rebuffer_frequency"
                        },
                        {
                          "value": 0,
                          "type": "milliseconds",
                          "name": "Rebuffer Duration (median)",
                          "metric": "rebuffer_duration",
                          "measurement": "median"
                        },
                        {
                          "value": 256,
                          "type": "milliseconds",
                          "name": "Rebuffer Duration (95th %)",
                          "metric": "rebuffer_duration",
                          "measurement": "95th"
                        },
                        {
                          "value": 0,
                          "type": "number",
                          "name": "Rebuffer Count (median)",
                          "metric": "rebuffer_count",
                          "measurement": "median"
                        },
                        {
                          "value": 1,
                          "type": "number",
                          "name": "Rebuffer Count (95th %)",
                          "metric": "rebuffer_count",
                          "measurement": "95th"
                        }
                      ]
                    },
                    {
                      "value": 1,
                      "type": "score",
                      "name": "Video Quality Score",
                      "metric": "video_quality_score",
                      "items": [
                        {
                          "value": 0,
                          "type": "percentage",
                          "name": "Upscale Percentage (median)",
                          "metric": "upscale_percentage",
                          "measurement": "median"
                        },
                        {
                          "value": 0,
                          "type": "percentage",
                          "name": "Upscale Percentage (95th %)",
                          "metric": "upscale_percentage",
                          "measurement": "95th"
                        },
                        {
                          "value": 0,
                          "type": "percentage",
                          "name": "Upscale Percentage (average)",
                          "metric": "upscale_percentage",
                          "measurement": "avg"
                        },
                        {
                          "value": 0.007,
                          "type": "percentage",
                          "name": "Downscale Percentage (median)",
                          "metric": "downscale_percentage",
                          "measurement": "median"
                        },
                        {
                          "value": 0.449,
                          "type": "percentage",
                          "name": "Downscale Percentage (95th %)",
                          "metric": "downscale_percentage",
                          "measurement": "95th"
                        },
                        {
                          "value": 0.11813909473676262,
                          "type": "percentage",
                          "name": "Downscale Percentage (average)",
                          "metric": "downscale_percentage",
                          "measurement": "avg"
                        },
                        {
                          "value": 0,
                          "type": "percentage",
                          "name": "Max Upscale Percentage (median)",
                          "metric": "max_upscale_percentage",
                          "measurement": "median"
                        },
                        {
                          "value": 0,
                          "type": "percentage",
                          "name": "Max Upscale Percentage (95th %)",
                          "metric": "max_upscale_percentage",
                          "measurement": "95th"
                        },
                        {
                          "value": 0.007,
                          "type": "percentage",
                          "name": "Max Downscale Percentage (median)",
                          "metric": "max_downscale_percentage",
                          "measurement": "median"
                        },
                        {
                          "value": 0.449,
                          "type": "percentage",
                          "name": "Max Downscale Percentage (95th %)",
                          "metric": "max_downscale_percentage",
                          "measurement": "95th"
                        },
                        {
                          "value": 851582.91015625,
                          "type": "mbps",
                          "name": "Weighted Average Bitrate (median)",
                          "metric": "weighted_average_bitrate",
                          "measurement": "median"
                        },
                        {
                          "value": 697016.265625,
                          "type": "mbps",
                          "name": "Weighted Average Bitrate (95th %)",
                          "metric": "weighted_average_bitrate",
                          "measurement": "95th"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/realtime/dimensions": {
      "get": {
        "tags": [
          "Real-Time"
        ],
        "summary": "List Real-Time Dimensions",
        "description": "Lists available real-time dimensions.",
        "operationId": "list-realtime-dimensions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRealTimeDimensionsResponse"
                },
                "example": {
                  "data": [
                    {
                      "display_name": "ASN",
                      "name": "asn"
                    },
                    {
                      "display_name": "CDN",
                      "name": "cdn"
                    },
                    {
                      "display_name": "Country",
                      "name": "country"
                    },
                    {
                      "display_name": "Operating system",
                      "name": "operating_system"
                    },
                    {
                      "display_name": "Player name",
                      "name": "player_name"
                    },
                    {
                      "display_name": "Region / State",
                      "name": "region"
                    },
                    {
                      "display_name": "Stream type",
                      "name": "stream_type"
                    },
                    {
                      "display_name": "Sub property ID",
                      "name": "sub_property_id"
                    },
                    {
                      "display_name": "Video series",
                      "name": "video_series"
                    },
                    {
                      "display_name": "Video title",
                      "name": "video_title"
                    }
                  ],
                  "timeframe": [
                    1610034823,
                    1610121223
                  ],
                  "total_row_count": null
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/realtime/metrics": {
      "get": {
        "tags": [
          "Real-Time"
        ],
        "summary": "List Real-Time Metrics",
        "description": "Lists available real-time metrics.",
        "operationId": "list-realtime-metrics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRealTimeMetricsResponse"
                },
                "example": {
                  "data": [
                    {
                      "display_name": "Current Average Bitrate",
                      "name": "current-average-bitrate"
                    },
                    {
                      "display_name": "Current Concurrent Viewers (CCV)",
                      "name": "current-concurrent-viewers"
                    },
                    {
                      "display_name": "Current Rebuffering Percentage",
                      "name": "current-rebuffering-percentage"
                    },
                    {
                      "display_name": "Exits Before Video Start",
                      "name": "exits-before-video-start"
                    },
                    {
                      "display_name": "Playback Failure Percentage",
                      "name": "playback-failure-percentage"
                    },
                    {
                      "display_name": "Video Startup Time",
                      "name": "video-startup-time"
                    }
                  ],
                  "timeframe": [
                    1610034858,
                    1610121258
                  ],
                  "total_row_count": null
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/realtime/metrics/{REALTIME_METRIC_ID}/breakdown": {
      "get": {
        "tags": [
          "Real-Time"
        ],
        "summary": "Get Real-Time Breakdown",
        "description": "Gets breakdown information for a specific dimension and metric along with the number of concurrent viewers and negative impact score.",
        "operationId": "get-realtime-breakdown",
        "parameters": [
          {
            "$ref": "#/components/parameters/realtime_metric_id"
          },
          {
            "$ref": "#/components/parameters/realtime_dimension"
          },
          {
            "$ref": "#/components/parameters/timestamp"
          },
          {
            "$ref": "#/components/parameters/filters"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/order_direction"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRealTimeBreakdownResponse"
                },
                "example": {
                  "data": [
                    {
                      "concurrent_viewers": 2680,
                      "metric_value": 0.008195679660675846,
                      "negative_impact": 1,
                      "value": "FR"
                    },
                    {
                      "concurrent_viewers": 36,
                      "metric_value": 0.010317417106767573,
                      "negative_impact": 4,
                      "value": "ES"
                    },
                    {
                      "concurrent_viewers": 30,
                      "metric_value": 0.06408818534303201,
                      "negative_impact": 2,
                      "value": "RE"
                    },
                    {
                      "concurrent_viewers": 26,
                      "metric_value": 0.008232510579858339,
                      "negative_impact": 7,
                      "value": "GB"
                    },
                    {
                      "concurrent_viewers": 10,
                      "metric_value": 0,
                      "negative_impact": 26,
                      "value": "BE"
                    }
                  ],
                  "timeframe": [
                    1610121421,
                    1610121421
                  ],
                  "total_row_count": null
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/realtime/metrics/{REALTIME_HISTOGRAM_METRIC_ID}/histogram-timeseries": {
      "get": {
        "tags": [
          "Real-Time"
        ],
        "summary": "Get Real-Time Histogram Timeseries",
        "description": "Gets histogram timeseries information for a specific metric.",
        "operationId": "get-realtime-histogram-timeseries",
        "parameters": [
          {
            "$ref": "#/components/parameters/realtime_histogram_metric_id"
          },
          {
            "$ref": "#/components/parameters/filters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRealTimeHistogramTimeseriesResponse"
                },
                "example": {
                  "data": [
                    {
                      "average": 5298.1612903225805,
                      "bucket_values": [
                        {
                          "count": 3,
                          "percentage": 0.0967741935483871
                        },
                        {
                          "count": 0,
                          "percentage": 0
                        },
                        {
                          "count": 0,
                          "percentage": 0
                        },
                        {
                          "count": 1,
                          "percentage": 0.03225806451612903
                        },
                        {
                          "count": 16,
                          "percentage": 0.5161290322580645
                        },
                        {
                          "count": 7,
                          "percentage": 0.22580645161290322
                        },
                        {
                          "count": 4,
                          "percentage": 0.12903225806451613
                        }
                      ],
                      "max_percentage": 0.5161290322580645,
                      "median": 4463,
                      "p95": 14834,
                      "sum": 31,
                      "timestamp": "2021-01-08T15:30:00Z"
                    },
                    {
                      "average": 3828.4146341463415,
                      "bucket_values": [
                        {
                          "count": 5,
                          "percentage": 0.12195121951219512
                        },
                        {
                          "count": 0,
                          "percentage": 0
                        },
                        {
                          "count": 0,
                          "percentage": 0
                        },
                        {
                          "count": 4,
                          "percentage": 0.0975609756097561
                        },
                        {
                          "count": 18,
                          "percentage": 0.43902439024390244
                        },
                        {
                          "count": 12,
                          "percentage": 0.2926829268292683
                        },
                        {
                          "count": 2,
                          "percentage": 0.04878048780487805
                        }
                      ],
                      "max_percentage": 0.43902439024390244,
                      "median": 2625,
                      "p95": 7378,
                      "sum": 41,
                      "timestamp": "2021-01-08T15:31:00Z"
                    }
                  ],
                  "meta": {
                    "bucket_unit": "milliseconds",
                    "buckets": [
                      {
                        "end": 100,
                        "start": 0
                      },
                      {
                        "end": 500,
                        "start": 100
                      },
                      {
                        "end": 1000,
                        "start": 500
                      },
                      {
                        "end": 2000,
                        "start": 1000
                      },
                      {
                        "end": 5000,
                        "start": 2000
                      },
                      {
                        "end": 10000,
                        "start": 5000
                      },
                      {
                        "end": null,
                        "start": 10000
                      }
                    ]
                  },
                  "timeframe": [
                    1610119800,
                    1610121540
                  ],
                  "total_row_count": null
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/realtime/metrics/{REALTIME_METRIC_ID}/timeseries": {
      "get": {
        "tags": [
          "Real-Time"
        ],
        "summary": "Get Real-Time Timeseries",
        "description": "Gets Time series information for a specific metric along with the number of concurrent viewers.",
        "operationId": "get-realtime-timeseries",
        "parameters": [
          {
            "$ref": "#/components/parameters/realtime_metric_id"
          },
          {
            "$ref": "#/components/parameters/filters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRealTimeTimeseriesResponse"
                },
                "example": {
                  "data": [
                    {
                      "concurrent_viewers": 2790,
                      "date": "2021-01-08T15:31:20Z",
                      "value": 2790
                    },
                    {
                      "concurrent_viewers": 2788,
                      "date": "2021-01-08T15:31:25Z",
                      "value": 2788
                    },
                    {
                      "concurrent_viewers": 2791,
                      "date": "2021-01-08T15:31:30Z",
                      "value": 2791
                    },
                    {
                      "concurrent_viewers": 2791,
                      "date": "2021-01-08T15:31:35Z",
                      "value": 2791
                    },
                    {
                      "concurrent_viewers": 2792,
                      "date": "2021-01-08T15:31:40Z",
                      "value": 2792
                    }
                  ],
                  "timeframe": [
                    1610119880,
                    1610121675
                  ],
                  "total_row_count": null
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/incidents": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "List Incidents",
        "description": "Returns a list of incidents.",
        "operationId": "list-incidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/order_direction"
          },
          {
            "$ref": "#/components/parameters/incident_status"
          },
          {
            "$ref": "#/components/parameters/severity"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListIncidentsResponse"
                },
                "example": {
                  "data": [
                    {
                      "affected_views": 71,
                      "affected_views_per_hour": 29,
                      "affected_views_per_hour_on_open": 75,
                      "breakdowns": [
                        {
                          "id": null,
                          "name": "error_type_id",
                          "value": "697070"
                        }
                      ],
                      "description": "Something is broken",
                      "error_description": "No seriously, something is really really broken :(",
                      "id": "4u13td",
                      "impact": "*71 views* were affected at a rate of *29 per hour*",
                      "incident_key": "5312a7c0bbb5d8353bd88602f01fe58eb15e9febac8fd2f0d8ce8f1cb138145c",
                      "measured_value": 5.9,
                      "measured_value_on_close": 0.1,
                      "measurement": "error_rate",
                      "notification_rules": [],
                      "notifications": [
                        {
                          "attempted_at": "2021-01-05T09:52:15.119040Z",
                          "id": 103014,
                          "queued_at": "2021-01-05T09:52:14.945157Z"
                        },
                        {
                          "attempted_at": "2021-01-05T11:31:08.244462Z",
                          "id": 102025,
                          "queued_at": "2021-01-05T11:31:08.061924Z"
                        }
                      ],
                      "resolved_at": "2021-01-05T11:31:04.000000Z",
                      "sample_size": 1000,
                      "sample_size_unit": "views",
                      "severity": "alert",
                      "started_at": "2021-01-05T09:04:46.000000Z",
                      "status": "closed",
                      "threshold": 5
                    },
                    {
                      "affected_views": 132,
                      "affected_views_per_hour": 11,
                      "affected_views_per_hour_on_open": 65,
                      "breakdowns": [
                        {
                          "id": null,
                          "name": "video_title",
                          "value": "Layla the dog video 1337"
                        },
                        {
                          "id": null,
                          "name": "error_type_id",
                          "value": "697065"
                        }
                      ],
                      "description": "Something else is broken",
                      "error_description": "Detailed error: On no!",
                      "id": "rd9579",
                      "impact": "*132 views* were affected at a rate of *11 per hour*",
                      "incident_key": "fd9add7a85a013d768f4039f9e726133eddb476c2f16b22ebfe56f18f7c03b27",
                      "measured_value": 97,
                      "measured_value_on_close": 1,
                      "measurement": "error_rate",
                      "notification_rules": [],
                      "notifications": [
                        {
                          "attempted_at": "2020-12-31T09:26:19.416919Z",
                          "id": 102198,
                          "queued_at": "2020-12-31T09:26:18.987717Z"
                        },
                        {
                          "attempted_at": "2020-12-31T20:23:57.279325Z",
                          "id": 101269,
                          "queued_at": "2020-12-31T20:23:56.997068Z"
                        }
                      ],
                      "resolved_at": "2020-12-31T20:22:54.000000Z",
                      "sample_size": 100,
                      "sample_size_unit": "views",
                      "severity": "alert",
                      "started_at": "2020-12-31T07:56:22.000000Z",
                      "status": "closed",
                      "threshold": 96
                    }
                  ],
                  "timeframe": [
                    1610035979,
                    1610122379
                  ],
                  "total_row_count": 2
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/incidents/{INCIDENT_ID}": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get an Incident",
        "description": "Returns the details of an incident.",
        "operationId": "get-incident",
        "parameters": [
          {
            "$ref": "#/components/parameters/incident_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentResponse"
                },
                "example": {
                  "data": {
                    "affected_views": 2026,
                    "affected_views_per_hour": 84,
                    "affected_views_per_hour_on_open": 12857,
                    "breakdowns": [
                      {
                        "id": null,
                        "name": "error_type_id",
                        "value": "499680"
                      },
                      {
                        "id": null,
                        "name": "video_title",
                        "value": "Cute dogs"
                      }
                    ],
                    "description": "This video is erroring a lot",
                    "error_description": "Error Type ID 499680",
                    "id": "g7q2df",
                    "impact": "*2026 views* were affected at a rate of *84 per hour*",
                    "incident_key": "045dfcbefdb68c6003aaf3bf5ed217493772519f28f14d129f95eaff159ea6d6b",
                    "measured_value": 100,
                    "measured_value_on_close": 8,
                    "measurement": "error_rate",
                    "notification_rules": [],
                    "notifications": [
                      {
                        "attempted_at": "2020-05-14T17:23:08.034662Z",
                        "id": 63293,
                        "queued_at": "2020-05-14T17:23:07.944457Z"
                      },
                      {
                        "attempted_at": "2020-05-13T17:22:30.444389Z",
                        "id": 62212,
                        "queued_at": "2020-05-13T17:22:30.354828Z"
                      }
                    ],
                    "resolved_at": "2020-05-14T17:22:30.000000Z",
                    "sample_size": 100,
                    "sample_size_unit": "views",
                    "severity": "alert",
                    "started_at": "2020-05-13T17:21:54.000000Z",
                    "status": "closed",
                    "threshold": 100
                  },
                  "timeframe": [
                    1610036456,
                    1610122856
                  ],
                  "total_row_count": null
                }
              }
            }
          }
        }
      }
    },
    "/data/v1/incidents/{INCIDENT_ID}/related": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "List Related Incidents",
        "description": "Returns all the incidents that seem related to a specific incident.",
        "operationId": "list-related-incidents",
        "parameters": [
          {
            "$ref": "#/components/parameters/incident_id"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/order_by"
          },
          {
            "$ref": "#/components/parameters/order_direction"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRelatedIncidentsResponse"
                },
                "example": {
                  "data": [
                    {
                      "affected_views": 71,
                      "affected_views_per_hour": 29,
                      "affected_views_per_hour_on_open": 75,
                      "breakdowns": [
                        {
                          "id": null,
                          "name": "error_type_id",
                          "value": "697070"
                        }
                      ],
                      "description": "Something is broken",
                      "error_description": "No seriously, something is really really broken :(",
                      "id": "4u13td",
                      "impact": "*71 views* were affected at a rate of *29 per hour*",
                      "incident_key": "5312a7c0bbb5d8353bd88602f01fe58eb15e9febac8fd2f0d8ce8f1cb138145c",
                      "measured_value": 5.9,
                      "measured_value_on_close": 0.1,
                      "measurement": "error_rate",
                      "notification_rules": [],
                      "notifications": [
                        {
                          "attempted_at": "2021-01-05T09:52:15.119040Z",
                          "id": 103014,
                          "queued_at": "2021-01-05T09:52:14.945157Z"
                        },
                        {
                          "attempted_at": "2021-01-05T11:31:08.244462Z",
                          "id": 102025,
                          "queued_at": "2021-01-05T11:31:08.061924Z"
                        }
                      ],
                      "resolved_at": "2021-01-05T11:31:04.000000Z",
                      "sample_size": 1000,
                      "sample_size_unit": "views",
                      "severity": "alert",
                      "started_at": "2021-01-05T09:04:46.000000Z",
                      "status": "closed",
                      "threshold": 5
                    },
                    {
                      "affected_views": 132,
                      "affected_views_per_hour": 11,
                      "affected_views_per_hour_on_open": 65,
                      "breakdowns": [
                        {
                          "id": null,
                          "name": "video_title",
                          "value": "Layla the dog video 1337"
                        },
                        {
                          "id": null,
                          "name": "error_type_id",
                          "value": "697065"
                        }
                      ],
                      "description": "Something else is broken",
                      "error_description": "Detailed error: On no!",
                      "id": "rd9579",
                      "impact": "*132 views* were affected at a rate of *11 per hour*",
                      "incident_key": "fd9add7a85a013d768f4039f9e726133eddb476c2f16b22ebfe56f18f7c03b27",
                      "measured_value": 97,
                      "measured_value_on_close": 1,
                      "measurement": "error_rate",
                      "notification_rules": [],
                      "notifications": [
                        {
                          "attempted_at": "2020-12-31T09:26:19.416919Z",
                          "id": 102198,
                          "queued_at": "2020-12-31T09:26:18.987717Z"
                        },
                        {
                          "attempted_at": "2020-12-31T20:23:57.279325Z",
                          "id": 101269,
                          "queued_at": "2020-12-31T20:23:56.997068Z"
                        }
                      ],
                      "resolved_at": "2020-12-31T20:22:54.000000Z",
                      "sample_size": 100,
                      "sample_size_unit": "views",
                      "severity": "alert",
                      "started_at": "2020-12-31T07:56:22.000000Z",
                      "status": "closed",
                      "threshold": 96
                    }
                  ],
                  "timeframe": [
                    1610035979,
                    1610122379
                  ],
                  "total_row_count": 2
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AssetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/Asset"
          }
        }
      },
      "CreateAssetRequest": {
        "type": "object",
        "properties": {
          "input": {
            "type": "array",
            "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
            "items": {
              "$ref": "#/components/schemas/InputSettings"
            }
          },
          "playback_policy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaybackPolicy"
            },
            "description": "An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\"public\"` (anyone with the playback URL can stream the asset). And `\"signed\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."
          },
          "per_title_encode": {
            "type": "boolean",
            "format": "boolean",
            "x-mux-doc-decorators": [
              "hidden"
            ],
            "deprecated": true
          },
          "passthrough": {
            "type": "string",
            "description": "Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."
          },
          "mp4_support": {
            "type": "string",
            "enum": [
              "none",
              "standard"
            ],
            "description": "Specify what level (if any) of support for mp4 playback. In most cases you should use our default HLS-based streaming playback ({playback_id}.m3u8) which can automatically adjust to viewers' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](/guides/video/download-your-videos) for more information."
          },
          "normalize_audio": {
            "type": "boolean",
            "format": "boolean",
            "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.",
            "default": false
          },
          "master_access": {
            "type": "string",
            "enum": [
              "none",
              "temporary"
            ],
            "description": "Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](/guides/video/download-your-videos) for more information."
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."
          }
        }
      },
      "CreateLiveStreamRequest": {
        "type": "object",
        "properties": {
          "playback_policy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaybackPolicy"
            }
          },
          "new_asset_settings": {
            "$ref": "#/components/schemas/CreateAssetRequest"
          },
          "reconnect_window": {
            "type": "number",
            "format": "float",
            "minimum": 0.1,
            "maximum": 300,
            "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. Defaults to 60 seconds on the API if not specified."
          },
          "passthrough": {
            "type": "string"
          },
          "audio_only": {
            "type": "boolean",
            "description": "Force the live stream to only process the audio track when the value is set to true. Mux drops the video track if broadcasted."
          },
          "embedded_subtitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveStreamEmbeddedSubtitleSettings"
            },
            "description": "Describe the embedded closed caption contents of the incoming live stream."
          },
          "reduced_latency": {
            "type": "boolean",
            "format": "boolean",
            "deprecated": true,
            "description": "This field is deprecated. Please use latency_mode instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. Note: Reconnect windows are incompatible with Reduced Latency and will always be set to zero (0) seconds. Read more here: https://mux.com/blog/reduced-latency-for-mux-live-streaming-now-available/"
          },
          "low_latency": {
            "type": "boolean",
            "format": "boolean",
            "deprecated": true,
            "x-mux-doc-decorators": [
              "public-beta",
              "hidden"
            ],
            "description": "This field is deprecated. Please use latency_mode instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency. Note: Reconnect windows are incompatible with Low Latency and will always be set to zero (0) seconds."
          },
          "latency_mode": {
            "type": "string",
            "enum": [
              "low",
              "reduced",
              "standard"
            ],
            "x-mux-doc-decorators": [
              "public-beta"
            ],
            "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags. The Low Latency value is a beta feature. Note: Reconnect windows are incompatible with Reduced Latency and Low Latency and will always be set to zero (0) seconds. Read more here: https://mux.com/blog/introducing-low-latency-live-streaming/"
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "Marks the live stream as a test live stream when the value is set to true. A test live stream can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test live streams created. Test live streams are watermarked with the Mux logo and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
          },
          "simulcast_targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSimulcastTargetRequest"
            }
          },
          "max_continuous_duration": {
            "$ref": "#/components/schemas/MaxContinuousDuration"
          }
        }
      },
      "CreatePlaybackIDRequest": {
        "type": "object",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/PlaybackPolicy"
          }
        }
      },
      "CreatePlaybackIDResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/PlaybackID"
          }
        }
      },
      "CreateUploadRequest": {
        "type": "object",
        "required": [
          "new_asset_settings"
        ],
        "properties": {
          "timeout": {
            "type": "integer",
            "format": "int32",
            "default": 3600,
            "minimum": 60,
            "maximum": 604800,
            "description": "Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"
          },
          "cors_origin": {
            "type": "string",
            "description": "If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."
          },
          "new_asset_settings": {
            "$ref": "#/components/schemas/CreateAssetRequest"
          },
          "test": {
            "type": "boolean",
            "format": "boolean"
          }
        }
      },
      "GetAssetInputInfoResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputInfo"
            }
          }
        }
      },
      "GetAssetPlaybackIDResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/PlaybackID"
          }
        }
      },
      "GetLiveStreamPlaybackIDResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/PlaybackID"
          }
        }
      },
      "ListAssetsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          }
        }
      },
      "ListLiveStreamsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveStream"
            }
          }
        }
      },
      "ListSigningKeysResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SigningKey"
            }
          }
        }
      },
      "ListUploadsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Upload"
            }
          }
        }
      },
      "LiveStreamResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/LiveStream"
          }
        }
      },
      "SigningKeyResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/SigningKey"
          }
        }
      },
      "SignalLiveStreamCompleteResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          }
        }
      },
      "DisableLiveStreamResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          }
        }
      },
      "EnableLiveStreamResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          }
        }
      },
      "UpdateAssetRequest": {
        "type": "object",
        "properties": {
          "passthrough": {
            "type": "string",
            "description": "Arbitrary metadata set for the Asset. Max 255 characters. In order to clear this value, the field should be included with an empty string value."
          }
        }
      },
      "UpdateAssetMP4SupportRequest": {
        "type": "object",
        "properties": {
          "mp4_support": {
            "type": "string",
            "description": "String value for the level of mp4 support",
            "enum": [
              "standard",
              "none"
            ]
          }
        }
      },
      "UpdateAssetMasterAccessRequest": {
        "type": "object",
        "properties": {
          "master_access": {
            "type": "string",
            "description": "Add or remove access to the master version of the video.",
            "enum": [
              "temporary",
              "none"
            ]
          }
        }
      },
      "UpdateLiveStreamEmbeddedSubtitlesRequest": {
        "type": "object",
        "properties": {
          "embedded_subtitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveStreamEmbeddedSubtitleSettings"
            },
            "description": "Describe the embedded closed caption contents of the incoming live stream."
          }
        }
      },
      "UpdateLiveStreamRequest": {
        "type": "object",
        "properties": {
          "passthrough": {
            "type": "string",
            "description": "Arbitrary user-supplied metadata set for the live stream. Max 255 characters. In order to clear this value, the field should be included with an empty-string value."
          },
          "latency_mode": {
            "type": "string",
            "enum": [
              "low",
              "reduced",
              "standard"
            ],
            "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags. The Low Latency value is a beta feature. Note: Reconnect windows are incompatible with Reduced Latency and Low Latency and will always be set to zero (0) seconds. Read more here: https://mux.com/blog/introducing-low-latency-live-streaming/"
          },
          "reconnect_window": {
            "type": "number",
            "format": "float",
            "minimum": 0.1,
            "maximum": 300,
            "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset."
          },
          "max_continuous_duration": {
            "$ref": "#/components/schemas/MaxContinuousDuration"
          }
        }
      },
      "UploadResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/Upload"
          }
        }
      },
      "CreatePlaybackRestrictionRequest": {
        "type": "object",
        "properties": {
          "referrer": {
            "type": "object",
            "$ref": "#/components/schemas/ReferrerDomainRestriction"
          }
        }
      },
      "PlaybackRestrictionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/PlaybackRestriction"
          }
        }
      },
      "ListPlaybackRestrictionsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaybackRestriction"
            }
          }
        }
      },
      "UpdateReferrerDomainRestrictionRequest": {
        "type": "object",
        "$ref": "#/components/schemas/ReferrerDomainRestriction"
      },
      "ListVideoViewsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbridgedVideoView"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "VideoViewResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/VideoView"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ListErrorsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "A unique identifier for this error."
          },
          "percentage": {
            "type": "number",
            "format": "double",
            "description": "The percentage of views that experienced this error."
          },
          "notes": {
            "type": "string",
            "description": "Notes that are attached to this error."
          },
          "message": {
            "type": "string",
            "description": "The error message."
          },
          "last_seen": {
            "type": "string",
            "description": "The last time this error was seen (ISO 8601 timestamp)."
          },
          "description": {
            "type": "string",
            "description": "Description of the error."
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "The total number of views that experiend this error."
          },
          "code": {
            "type": "integer",
            "format": "int64",
            "description": "The error code"
          }
        }
      },
      "ListFiltersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "basic": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "advanced": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ListFilterValuesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterValue"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "FilterValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ListDimensionsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "basic": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "advanced": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ListDimensionValuesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DimensionValue"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "DimensionValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ListExportsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ListVideoViewExportsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportDate"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int32"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ExportDate": {
        "type": "object",
        "properties": {
          "export_date": {
            "type": "string",
            "format": "date"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportFile"
            }
          }
        }
      },
      "ExportFile": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "ListBreakdownValuesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BreakdownValue"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "BreakdownValue": {
        "type": "object",
        "properties": {
          "views": {
            "type": "integer",
            "format": "int64"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "total_watch_time": {
            "type": "integer",
            "format": "int64"
          },
          "negative_impact": {
            "type": "integer",
            "format": "int32"
          },
          "field": {
            "type": "string"
          }
        }
      },
      "GetOverallValuesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OverallValues"
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "OverallValues": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "total_watch_time": {
            "type": "integer",
            "format": "int64"
          },
          "total_views": {
            "type": "integer",
            "format": "int64"
          },
          "global_value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ListInsightsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Insight"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "Insight": {
        "type": "object",
        "properties": {
          "total_watch_time": {
            "type": "integer",
            "format": "int64"
          },
          "total_views": {
            "type": "integer",
            "format": "int64"
          },
          "negative_impact_score": {
            "type": "number",
            "format": "float"
          },
          "metric": {
            "type": "number",
            "format": "double"
          },
          "filter_value": {
            "type": "string"
          },
          "filter_column": {
            "type": "string"
          }
        }
      },
      "GetMetricTimeseriesDataResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ListAllMetricValuesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Score"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "Score": {
        "type": "object",
        "properties": {
          "watch_time": {
            "type": "integer",
            "format": "int64"
          },
          "view_count": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "metric": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metric"
            }
          }
        }
      },
      "Metric": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "metric": {
            "type": "string"
          },
          "measurement": {
            "type": "string"
          }
        }
      },
      "ListDeliveryUsageResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryReport"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Number of assets returned in this response. Default value is 100."
          }
        }
      },
      "SimulcastTargetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/SimulcastTarget"
          }
        }
      },
      "CreateSimulcastTargetRequest": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "passthrough": {
            "type": "string",
            "description": "Arbitrary user-supplied metadata set by you when creating a simulcast target."
          },
          "stream_key": {
            "type": "string",
            "description": "Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to."
          },
          "url": {
            "type": "string",
            "description": "RTMP hostname including application name for the third party live streaming service. Example: 'rtmp://live.example.com/app'."
          }
        }
      },
      "CreateTrackRequest": {
        "type": "object",
        "required": [
          "url",
          "type",
          "text_type",
          "language_code"
        ],
        "properties": {
          "url": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text"
            ]
          },
          "text_type": {
            "type": "string",
            "enum": [
              "subtitles"
            ]
          },
          "language_code": {
            "type": "string",
            "description": "The language code value must be a valid BCP 47 specification compliant value. For example, en for English or en-US for the US version of English."
          },
          "name": {
            "type": "string",
            "description": "The name of the track containing a human-readable description. This value must be unique across all the text type and subtitles text type tracks. HLS manifest will associate subtitle text track with this value. For example, set the value to \"English\" for subtitles text track with language_code as en-US. If this parameter is not included, Mux will auto-populate based on the language_code value."
          },
          "closed_captions": {
            "type": "boolean",
            "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH)."
          },
          "passthrough": {
            "type": "string",
            "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track."
          }
        }
      },
      "CreateTrackResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/Track"
          }
        }
      },
      "ListRealTimeDimensionsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                }
              }
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ListRealTimeMetricsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "display_name": {
                  "type": "string"
                }
              }
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "GetRealTimeBreakdownResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeBreakdownValue"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "RealTimeBreakdownValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "negative_impact": {
            "type": "integer",
            "format": "int64"
          },
          "metric_value": {
            "type": "number",
            "format": "double"
          },
          "display_value": {
            "type": "string"
          },
          "concurrent_viewers": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetRealTimeHistogramTimeseriesResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "buckets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RealTimeHistogramTimeseriesBucket"
                }
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeHistogramTimeseriesDatapoint"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "RealTimeHistogramTimeseriesDatapoint": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "sum": {
            "type": "integer",
            "format": "int64"
          },
          "p95": {
            "type": "number",
            "format": "double"
          },
          "median": {
            "type": "number",
            "format": "double"
          },
          "max_percentage": {
            "type": "number",
            "format": "double"
          },
          "bucket_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeHistogramTimeseriesBucketValues"
            }
          },
          "average": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RealTimeHistogramTimeseriesBucket": {
        "type": "object",
        "properties": {
          "start": {
            "type": "integer",
            "format": "int64"
          },
          "end": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RealTimeHistogramTimeseriesBucketValues": {
        "type": "object",
        "properties": {
          "percentage": {
            "type": "number",
            "format": "double"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetRealTimeTimeseriesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RealTimeTimeseriesDatapoint"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "RealTimeTimeseriesDatapoint": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "date": {
            "type": "string"
          },
          "concurrent_viewers": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ListIncidentsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Incident"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ListRelatedIncidentsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Incident"
            }
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "IncidentResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/Incident"
          },
          "timeframe": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "GetAssetOrLiveStreamIdResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The Playback ID used to retrieve the corresponding asset or the live stream ID"
              },
              "policy": {
                "$ref": "#/components/schemas/PlaybackPolicy"
              },
              "object": {
                "type": "object",
                "description": "Describes the Asset or LiveStream object associated with the playback ID.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The identifier of the object."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "asset",
                      "live_stream"
                    ],
                    "description": "Identifies the object type associated with the playback ID."
                  }
                }
              }
            }
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Asset. Max 255 characters."
          },
          "created_at": {
            "type": "string",
            "format": "int64",
            "description": "Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."
          },
          "status": {
            "type": "string",
            "enum": [
              "preparing",
              "ready",
              "errored"
            ],
            "description": "The status of the asset."
          },
          "duration": {
            "type": "number",
            "format": "double",
            "description": "The duration of the asset in seconds (max duration for a single asset is 12 hours)."
          },
          "max_stored_resolution": {
            "type": "string",
            "enum": [
              "Audio only",
              "SD",
              "HD",
              "FHD",
              "UHD"
            ],
            "description": "The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored."
          },
          "max_stored_frame_rate": {
            "type": "number",
            "format": "double",
            "description": "The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."
          },
          "aspect_ratio": {
            "type": "string",
            "description": "The aspect ratio of the asset in the form of `width:height`, for example `16:9`."
          },
          "playback_ids": {
            "type": "array",
            "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/video/play-your-videos) for more details.",
            "items": {
              "$ref": "#/components/schemas/PlaybackID"
            }
          },
          "tracks": {
            "type": "array",
            "description": "The individual media tracks that make up an asset.",
            "items": {
              "$ref": "#/components/schemas/Track"
            }
          },
          "errors": {
            "type": "object",
            "description": "Object that describes any errors that happened when processing this asset.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of error that occurred for this asset."
              },
              "messages": {
                "type": "array",
                "description": "Error messages with more details.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "per_title_encode": {
            "type": "boolean",
            "format": "boolean",
            "x-mux-doc-decorators": [
              "hidden"
            ],
            "deprecated": true
          },
          "upload_id": {
            "type": "string",
            "description": "Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."
          },
          "is_live": {
            "type": "boolean",
            "format": "boolean",
            "description": "Whether the asset is created from a live stream and the live stream is currently `active` and not in `idle` state."
          },
          "passthrough": {
            "type": "string",
            "description": "Arbitrary user-supplied metadata set for the asset. Max 255 characters."
          },
          "live_stream_id": {
            "type": "string",
            "description": "Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."
          },
          "master": {
            "type": "object",
            "description": "An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_acess` is set to `none` and when the temporary URL expires.",
            "properties": {
              "status": {
                "enum": [
                  "ready",
                  "preparing",
                  "errored"
                ],
                "type": "string"
              },
              "url": {
                "type": "string",
                "description": "The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."
              }
            }
          },
          "master_access": {
            "type": "string",
            "enum": [
              "temporary",
              "none"
            ],
            "default": "none"
          },
          "mp4_support": {
            "type": "string",
            "default": "none",
            "enum": [
              "standard",
              "none"
            ]
          },
          "source_asset_id": {
            "type": "string",
            "description": "Asset Identifier of the video used as the source for creating the clip."
          },
          "normalize_audio": {
            "type": "boolean",
            "default": false,
            "description": "Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."
          },
          "static_renditions": {
            "type": "object",
            "description": "An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/video/download-your-videos) for more information.",
            "properties": {
              "status": {
                "type": "string",
                "default": "disabled",
                "description": "Indicates the status of downloadable MP4 versions of this asset.",
                "enum": [
                  "ready",
                  "preparing",
                  "disabled",
                  "errored"
                ]
              },
              "files": {
                "type": "array",
                "description": "Array of file objects.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "low.mp4",
                        "medium.mp4",
                        "high.mp4",
                        "audio.m4a"
                      ]
                    },
                    "ext": {
                      "type": "string",
                      "description": "Extension of the static rendition file",
                      "enum": [
                        "mp4",
                        "m4a"
                      ]
                    },
                    "height": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The height of the static rendition's file in pixels"
                    },
                    "width": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The width of the static rendition's file in pixels"
                    },
                    "bitrate": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The bitrate in bits per second"
                    },
                    "filesize": {
                      "type": "string",
                      "format": "int64",
                      "description": "The file size in bytes"
                    }
                  }
                }
              }
            }
          },
          "recording_times": {
            "type": "array",
            "description": "An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream",
            "items": {
              "type": "object",
              "properties": {
                "started_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."
                },
                "duration": {
                  "type": "number",
                  "format": "double",
                  "description": "The duration of the live stream recorded. The time value is in seconds."
                }
              }
            }
          },
          "non_standard_input_reasons": {
            "type": "object",
            "description": "An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/video/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.",
            "properties": {
              "video_codec": {
                "type": "string",
                "description": "The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."
              },
              "audio_codec": {
                "type": "string",
                "description": "The audio codec used on the input file. Non-AAC audio codecs are non-standard."
              },
              "video_gop_size": {
                "type": "string",
                "enum": [
                  "high"
                ],
                "description": "The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."
              },
              "video_frame_rate": {
                "type": "string",
                "description": "The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."
              },
              "video_resolution": {
                "type": "string",
                "description": "The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."
              },
              "video_bitrate": {
                "type": "string",
                "enum": [
                  "high"
                ],
                "description": "The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what's considered standard which typically is 16 Mbps."
              },
              "pixel_aspect_ratio": {
                "type": "string",
                "description": "The video pixel aspect ratio of the input file."
              },
              "video_edit_list": {
                "type": "string",
                "enum": [
                  "non-standard"
                ],
                "description": "Video Edit List reason indicates that the input file's video track contains a complex Edit Decision List."
              },
              "audio_edit_list": {
                "type": "string",
                "enum": [
                  "non-standard"
                ],
                "description": "Audio Edit List reason indicates that the input file's audio track contains a complex Edit Decision List."
              },
              "unexpected_media_file_parameters": {
                "type": "string",
                "enum": [
                  "non-standard"
                ],
                "description": "A catch-all reason when the input file in created with non-standard encoding parameters."
              }
            }
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."
          }
        }
      },
      "InputSettings": {
        "type": "object",
        "description": "An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.",
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL of the file that Mux should download and use.\n* For subtitles text tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) format for ingesting Subtitles and Closed Captions.\n* For Watermarking or Overlay, the URL is the location of the watermark image.\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\n"
          },
          "overlay_settings": {
            "type": "object",
            "description": "An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.",
            "properties": {
              "vertical_align": {
                "type": "string",
                "enum": [
                  "top",
                  "middle",
                  "bottom"
                ],
                "description": "Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\"top\"`"
              },
              "vertical_margin": {
                "type": "string",
                "description": "The distance from the vertical_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'middle', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."
              },
              "horizontal_align": {
                "type": "string",
                "enum": [
                  "left",
                  "center",
                  "right"
                ],
                "description": "Where the horizontal positioning of the overlay/watermark should begin from."
              },
              "horizontal_margin": {
                "type": "string",
                "description": "The distance from the horizontal_align starting point and the image's closest edge. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). Negative values will move the overlay offscreen. In the case of 'center', a positive value will shift the image towards the right and and a negative value will shift it towards the left."
              },
              "width": {
                "type": "string",
                "description": "How wide the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."
              },
              "height": {
                "type": "string",
                "description": "How tall the overlay should appear. Can be expressed as a percent (\"10%\") or as a pixel value (\"100px\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."
              },
              "opacity": {
                "type": "string",
                "description": "How opaque the overlay should appear, expressed as a percent. (Default 100%)"
              }
            }
          },
          "start_time": {
            "type": "number",
            "format": "double",
            "description": "The time offset in seconds from the beginning of the video indicating the clip's starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
          },
          "end_time": {
            "type": "number",
            "format": "double",
            "description": "The time offset in seconds from the beginning of the video, indicating the clip's ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."
          },
          "type": {
            "type": "string",
            "enum": [
              "video",
              "audio",
              "text"
            ],
            "description": "This parameter is required for the `text` track type."
          },
          "text_type": {
            "type": "string",
            "enum": [
              "subtitles"
            ],
            "description": "Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` track type."
          },
          "language_code": {
            "type": "string",
            "description": "The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, en for English or en-US for the US version of English. This parameter is required for text type and subtitles text type track."
          },
          "name": {
            "type": "string",
            "description": "The name of the track containing a human-readable description. This value must be unique across all text type and subtitles `text` type tracks. The hls manifest will associate a subtitle text track with this value. For example, the value should be \"English\" for subtitles text track with language_code as en. This optional parameter should be used only for `text` type and subtitles `text` type track. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."
          },
          "closed_captions": {
            "type": "boolean",
            "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for `text` type and subtitles `text` type tracks."
          },
          "passthrough": {
            "type": "string",
            "description": "This optional parameter should be used for `text` type and subtitles `text` type tracks."
          }
        }
      },
      "InputTrack": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "encoding": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int64"
          },
          "height": {
            "type": "integer",
            "format": "int64"
          },
          "frame_rate": {
            "type": "number",
            "format": "double"
          },
          "sample_rate": {
            "type": "integer",
            "format": "int64"
          },
          "sample_size": {
            "type": "integer",
            "format": "int64"
          },
          "channels": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InputFile": {
        "type": "object",
        "properties": {
          "container_format": {
            "type": "string"
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputTrack"
            }
          }
        }
      },
      "InputInfo": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/InputSettings"
          },
          "file": {
            "$ref": "#/components/schemas/InputFile"
          }
        }
      },
      "LiveStreamEmbeddedSubtitleSettings": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A name for this live stream closed caption track."
          },
          "passthrough": {
            "type": "string",
            "description": "Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."
          },
          "language_code": {
            "type": "string",
            "description": "The language of the closed caption stream. Value must be BCP 47 compliant.",
            "default": "en"
          },
          "language_channel": {
            "type": "string",
            "description": "CEA-608 caption channel to read data from.",
            "default": "cc1",
            "enum": [
              "cc1"
            ]
          }
        }
      },
      "LiveStreamStatus": {
        "type": "string",
        "enum": [
          "active",
          "idle",
          "disabled"
        ],
        "description": "`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."
      },
      "LiveStream": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Live Stream. Max 255 characters."
          },
          "created_at": {
            "type": "string",
            "format": "int64",
            "description": "Time the Live Stream was created, defined as a Unix timestamp (seconds since epoch)."
          },
          "stream_key": {
            "type": "string",
            "description": "Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."
          },
          "active_asset_id": {
            "type": "string",
            "description": "The Asset that is currently being created if there is an active broadcast."
          },
          "recent_asset_ids": {
            "type": "array",
            "description": "An array of strings with the most recent Assets that were created from this live stream.",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "$ref": "#/components/schemas/LiveStreamStatus"
          },
          "playback_ids": {
            "type": "array",
            "description": "An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/video/play-your-videos) for more details.",
            "items": {
              "$ref": "#/components/schemas/PlaybackID"
            }
          },
          "new_asset_settings": {
            "$ref": "#/components/schemas/CreateAssetRequest"
          },
          "passthrough": {
            "type": "string",
            "description": "Arbitrary user-supplied metadata set for the asset. Max 255 characters."
          },
          "audio_only": {
            "type": "boolean",
            "description": "The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."
          },
          "embedded_subtitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveStreamEmbeddedSubtitleSettings"
            },
            "description": "Describes the embedded closed caption configuration of the incoming live stream."
          },
          "reconnect_window": {
            "type": "number",
            "format": "float",
            "default": 60,
            "description": "When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Min**: 0.1s. **Max**: 300s (5 minutes)."
          },
          "reduced_latency": {
            "type": "boolean",
            "format": "boolean",
            "deprecated": true,
            "description": "This field is deprecated. Please use latency_mode instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. **Note**: Reconnect windows are incompatible with Reduced Latency and will always be set to zero (0) seconds. See the [Reduce live stream latency guide](https://docs.mux.com/guides/video/reduce-live-stream-latency) to understand the tradeoffs."
          },
          "low_latency": {
            "type": "boolean",
            "format": "boolean",
            "deprecated": true,
            "x-mux-doc-decorators": [
              "public-beta",
              "hidden"
            ],
            "description": "This field is deprecated. Please use latency_mode instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency. Note: Reconnect windows are incompatible with Low Latency and will always be set to zero (0) seconds."
          },
          "simulcast_targets": {
            "type": "array",
            "description": "Each Simulcast Target contains configuration details to broadcast (or \"restream\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/video/stream-live-to-3rd-party-platforms).",
            "items": {
              "$ref": "#/components/schemas/SimulcastTarget"
            }
          },
          "latency_mode": {
            "type": "string",
            "x-mux-doc-decorators": [
              "public-beta"
            ],
            "enum": [
              "low",
              "reduced",
              "standard"
            ],
            "description": "Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags. The Low Latency value is a beta feature. Note: Reconnect windows are incompatible with Reduced Latency and Low Latency and will always be set to zero (0) seconds. Read more here: https://mux.com/blog/introducing-low-latency-live-streaming/"
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."
          },
          "max_continuous_duration": {
            "$ref": "#/components/schemas/MaxContinuousDuration"
          }
        }
      },
      "SigningKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Signing Key."
          },
          "created_at": {
            "type": "string",
            "format": "int64",
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch."
          },
          "private_key": {
            "type": "string",
            "format": "byte",
            "description": "A Base64 encoded private key that can be used with the RS256 algorithm when creating a [JWT](https://jwt.io/). **Note that this value is only returned once when creating a URL signing key.**"
          }
        }
      },
      "Track": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Track"
          },
          "type": {
            "type": "string",
            "description": "The type of track",
            "enum": [
              "video",
              "audio",
              "text"
            ]
          },
          "duration": {
            "type": "number",
            "format": "double",
            "description": "The duration in seconds of the track media. This parameter is not set for the `text` type track. This field is optional and may not be set. The top level `duration` field of an asset will always be set."
          },
          "max_width": {
            "type": "integer",
            "format": "int64",
            "description": "The maximum width in pixels available for the track. Only set for the `video` type track."
          },
          "max_height": {
            "type": "integer",
            "format": "int64",
            "description": "The maximum height in pixels available for the track. Only set for the `video` type track."
          },
          "max_frame_rate": {
            "type": "number",
            "format": "double",
            "description": "The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."
          },
          "max_channels": {
            "type": "integer",
            "format": "int64",
            "description": "The maximum number of audio channels the track supports. Only set for the `audio` type track."
          },
          "max_channel_layout": {
            "type": "string",
            "description": "Only set for the `audio` type track."
          },
          "text_type": {
            "type": "string",
            "enum": [
              "subtitles"
            ],
            "description": "This parameter is set only for the `text` type track."
          },
          "language_code": {
            "type": "string",
            "description": "The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is set for `text` type and `subtitles` text type track."
          },
          "name": {
            "type": "string",
            "description": "The name of the track containing a human-readable description. The hls manifest will associate a subtitle text track with this value. For example, the value is \"English\" for subtitles text track for the `language_code` value of `en-US`. This parameter is set for the `text` type and `subtitles` text type track."
          },
          "closed_captions": {
            "type": "boolean",
            "description": "Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is set for the `text` type and `subtitles` text type track."
          },
          "passthrough": {
            "type": "string",
            "description": "Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is set for `text` type and `subtitles` text type track. Max 255 characters."
          }
        }
      },
      "PlaybackID": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the PlaybackID"
          },
          "policy": {
            "$ref": "#/components/schemas/PlaybackPolicy"
          }
        }
      },
      "PlaybackPolicy": {
        "type": "string",
        "enum": [
          "public",
          "signed"
        ],
        "description": "* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\n\n* `signed` playback IDS should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/video/secure-video-playback) for details about creating tokens.\n"
      },
      "Upload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Direct Upload."
          },
          "timeout": {
            "type": "integer",
            "format": "int32",
            "default": 3600,
            "minimum": 60,
            "maximum": 604800,
            "description": "Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "asset_created",
              "errored",
              "cancelled",
              "timed_out"
            ]
          },
          "new_asset_settings": {
            "$ref": "#/components/schemas/Asset"
          },
          "asset_id": {
            "type": "string",
            "description": "Only set once the upload is in the `asset_created` state."
          },
          "error": {
            "type": "object",
            "description": "Only set if an error occurred during asset creation.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Label for the specific error"
              },
              "message": {
                "type": "string",
                "description": "Human readable error message"
              }
            }
          },
          "cors_origin": {
            "type": "string",
            "description": "If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."
          },
          "url": {
            "type": "string",
            "description": "The URL to upload the associated source media to."
          },
          "test": {
            "type": "boolean",
            "format": "boolean",
            "description": "Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset."
          }
        }
      },
      "DeliveryReport": {
        "type": "object",
        "properties": {
          "live_stream_id": {
            "type": "string",
            "description": "Unique identifier for the live stream that created the asset."
          },
          "asset_id": {
            "type": "string",
            "description": "Unique identifier for the asset."
          },
          "passthrough": {
            "type": "string",
            "description": "The `passthrough` value for the asset."
          },
          "created_at": {
            "type": "string",
            "description": "Time at which the asset was created. Measured in seconds since the Unix epoch."
          },
          "deleted_at": {
            "type": "string",
            "description": "If exists, time at which the asset was deleted. Measured in seconds since the Unix epoch."
          },
          "asset_state": {
            "type": "string",
            "enum": [
              "ready",
              "errored",
              "deleted"
            ],
            "description": "The state of the asset."
          },
          "asset_duration": {
            "type": "number",
            "format": "double",
            "description": "The duration of the asset in seconds."
          },
          "delivered_seconds": {
            "type": "number",
            "format": "double",
            "description": "Total number of delivered seconds during this time window."
          }
        }
      },
      "SimulcastTarget": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the Simulcast Target"
          },
          "passthrough": {
            "type": "string",
            "description": "Arbitrary user-supplied metadata set when creating a simulcast target."
          },
          "status": {
            "type": "string",
            "enum": [
              "idle",
              "starting",
              "broadcasting",
              "errored"
            ],
            "description": "The current status of the simulcast target. See Statuses below for detailed description.\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. Compared to other errored statuses in the Mux Video API, a simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\n"
          },
          "stream_key": {
            "type": "string",
            "description": "Stream Key represents an stream identifier for the third party live streaming service to simulcast the parent live stream too."
          },
          "url": {
            "type": "string",
            "description": "RTMP hostname including the application name for the third party live streaming service."
          }
        }
      },
      "PlaybackRestriction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Playback Restriction. Max 255 characters."
          },
          "created_at": {
            "type": "string",
            "format": "int64",
            "description": "Time the Playback Restriction was created, defined as a Unix timestamp (seconds since epoch)."
          },
          "updated_at": {
            "type": "string",
            "format": "int64",
            "description": "Time the Playback Restriction was last updated, defined as a Unix timestamp (seconds since epoch)."
          },
          "referrer": {
            "$ref": "#/components/schemas/ReferrerDomainRestriction"
          }
        }
      },
      "ReferrerDomainRestriction": {
        "type": "object",
        "description": "A list of domains allowed to play your videos.",
        "properties": {
          "allowed_domains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of domains allowed to play videos. Possible values are\n  * `[]` Empty Array indicates deny video playback requests for all domains\n  * `[\"*\"]` A Single Wildcard `*` entry means allow video playback requests from any domain\n  *  `[\"*.example.com\", \"foo.com\"]` A list of up to 10 domains or valid dns-style wildcards\n"
          },
          "allow_no_referrer": {
            "type": "boolean",
            "default": false,
            "description": "A boolean to determine whether to allow or deny HTTP requests without `Referer` HTTP request header. Playback requests coming from non-web/native applications like iOS, Android or smart TVs will not have a `Referer` HTTP header. Set this value to `true` to allow these playback requests."
          }
        }
      },
      "Incident": {
        "type": "object",
        "properties": {
          "threshold": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string"
          },
          "started_at": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          },
          "sample_size_unit": {
            "type": "string"
          },
          "sample_size": {
            "type": "integer",
            "format": "int64"
          },
          "resolved_at": {
            "type": "string"
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentNotification"
            }
          },
          "notification_rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentNotificationRule"
            }
          },
          "measurement": {
            "type": "string"
          },
          "measured_value_on_close": {
            "type": "number",
            "format": "double"
          },
          "measured_value": {
            "type": "number",
            "format": "double"
          },
          "incident_key": {
            "type": "string"
          },
          "impact": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "breakdowns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentBreakdown"
            }
          },
          "affected_views_per_hour_on_open": {
            "type": "integer",
            "format": "int64"
          },
          "affected_views_per_hour": {
            "type": "integer",
            "format": "int64"
          },
          "affected_views": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "IncidentBreakdown": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "IncidentNotification": {
        "type": "object",
        "properties": {
          "queued_at": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "attempted_at": {
            "type": "string"
          }
        }
      },
      "IncidentNotificationRule": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationRule"
            }
          },
          "property_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      },
      "NotificationRule": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "VideoView": {
        "type": "object",
        "properties": {
          "view_total_upscaling": {
            "type": "string"
          },
          "preroll_ad_asset_hostname": {
            "type": "string"
          },
          "player_source_domain": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "viewer_user_agent": {
            "type": "string"
          },
          "preroll_requested": {
            "type": "boolean"
          },
          "page_type": {
            "type": "string"
          },
          "startup_score": {
            "type": "string"
          },
          "view_seek_duration": {
            "type": "integer",
            "format": "int64"
          },
          "country_name": {
            "type": "string"
          },
          "player_source_height": {
            "type": "integer",
            "format": "int32"
          },
          "longitude": {
            "type": "string"
          },
          "buffering_count": {
            "type": "integer",
            "format": "int64"
          },
          "video_duration": {
            "type": "integer",
            "format": "int64"
          },
          "player_source_type": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "view_id": {
            "type": "string"
          },
          "platform_description": {
            "type": "string"
          },
          "video_startup_preroll_request_time": {
            "type": "integer",
            "format": "int64"
          },
          "viewer_device_name": {
            "type": "string"
          },
          "video_series": {
            "type": "string"
          },
          "viewer_application_name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "view_total_content_playback_time": {
            "type": "integer",
            "format": "int64"
          },
          "cdn": {
            "type": "string"
          },
          "player_instance_id": {
            "type": "string"
          },
          "video_language": {
            "type": "string"
          },
          "player_source_width": {
            "type": "integer",
            "format": "int32"
          },
          "player_error_message": {
            "type": "string"
          },
          "player_mux_plugin_version": {
            "type": "string"
          },
          "watched": {
            "type": "boolean"
          },
          "playback_score": {
            "type": "string"
          },
          "page_url": {
            "type": "string"
          },
          "metro": {
            "type": "string"
          },
          "view_max_request_latency": {
            "type": "integer",
            "format": "int64"
          },
          "requests_for_first_preroll": {
            "type": "integer",
            "format": "int64"
          },
          "view_total_downscaling": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "player_source_host_name": {
            "type": "string"
          },
          "inserted_at": {
            "type": "string"
          },
          "view_end": {
            "type": "string"
          },
          "mux_embed_version": {
            "type": "string"
          },
          "player_language": {
            "type": "string"
          },
          "page_load_time": {
            "type": "integer",
            "format": "int64"
          },
          "viewer_device_category": {
            "type": "string"
          },
          "video_startup_preroll_load_time": {
            "type": "integer",
            "format": "int64"
          },
          "player_version": {
            "type": "string"
          },
          "watch_time": {
            "type": "integer",
            "format": "int64"
          },
          "player_source_stream_type": {
            "type": "string"
          },
          "preroll_ad_tag_hostname": {
            "type": "string"
          },
          "viewer_device_manufacturer": {
            "type": "string"
          },
          "rebuffering_score": {
            "type": "string"
          },
          "experiment_name": {
            "type": "string"
          },
          "viewer_os_version": {
            "type": "string"
          },
          "player_preload": {
            "type": "boolean"
          },
          "buffering_duration": {
            "type": "integer",
            "format": "int64"
          },
          "player_view_count": {
            "type": "integer",
            "format": "int64"
          },
          "player_software": {
            "type": "string"
          },
          "player_load_time": {
            "type": "integer",
            "format": "int64"
          },
          "platform_summary": {
            "type": "string"
          },
          "video_encoding_variant": {
            "type": "string"
          },
          "player_width": {
            "type": "integer",
            "format": "int32"
          },
          "view_seek_count": {
            "type": "integer",
            "format": "int64"
          },
          "viewer_experience_score": {
            "type": "string"
          },
          "view_error_id": {
            "type": "integer",
            "format": "int32"
          },
          "video_variant_name": {
            "type": "string"
          },
          "preroll_played": {
            "type": "boolean"
          },
          "viewer_application_engine": {
            "type": "string"
          },
          "viewer_os_architecture": {
            "type": "string"
          },
          "player_error_code": {
            "type": "string"
          },
          "buffering_rate": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoViewEvent"
            }
          },
          "player_name": {
            "type": "string"
          },
          "view_start": {
            "type": "string"
          },
          "view_average_request_throughput": {
            "type": "integer",
            "format": "int64"
          },
          "video_producer": {
            "type": "string"
          },
          "error_type_id": {
            "type": "integer",
            "format": "int32"
          },
          "mux_viewer_id": {
            "type": "string"
          },
          "video_id": {
            "type": "string"
          },
          "continent_code": {
            "type": "string"
          },
          "session_id": {
            "type": "string"
          },
          "exit_before_video_start": {
            "type": "boolean"
          },
          "video_content_type": {
            "type": "string"
          },
          "viewer_os_family": {
            "type": "string"
          },
          "player_poster": {
            "type": "string"
          },
          "view_average_request_latency": {
            "type": "integer",
            "format": "int64"
          },
          "video_variant_id": {
            "type": "string"
          },
          "player_source_duration": {
            "type": "integer",
            "format": "int64"
          },
          "player_source_url": {
            "type": "string"
          },
          "mux_api_version": {
            "type": "string"
          },
          "video_title": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "short_time": {
            "type": "string"
          },
          "rebuffer_percentage": {
            "type": "string"
          },
          "time_to_first_frame": {
            "type": "integer",
            "format": "int64"
          },
          "viewer_user_id": {
            "type": "string"
          },
          "video_stream_type": {
            "type": "string"
          },
          "player_startup_time": {
            "type": "integer",
            "format": "int64"
          },
          "viewer_application_version": {
            "type": "string"
          },
          "view_max_downscale_percentage": {
            "type": "string"
          },
          "view_max_upscale_percentage": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          },
          "used_fullscreen": {
            "type": "boolean"
          },
          "isp": {
            "type": "string"
          },
          "property_id": {
            "type": "integer",
            "format": "int64"
          },
          "player_autoplay": {
            "type": "boolean"
          },
          "player_height": {
            "type": "integer",
            "format": "int32"
          },
          "asn": {
            "type": "integer",
            "format": "int64"
          },
          "asn_name": {
            "type": "string"
          },
          "quality_score": {
            "type": "string"
          },
          "player_software_version": {
            "type": "string"
          },
          "player_mux_plugin_name": {
            "type": "string"
          },
          "sub_property_id": {
            "type": "string"
          },
          "player_remote_played": {
            "type": "boolean"
          },
          "view_max_playhead_position": {
            "type": "string"
          },
          "view_playing_time": {
            "type": "string"
          },
          "view_session_id": {
            "type": "string"
          },
          "viewer_connection_type": {
            "type": "string"
          },
          "viewer_device_model": {
            "type": "string"
          },
          "weighted_average_bitrate": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AbridgedVideoView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "viewer_os_family": {
            "type": "string"
          },
          "viewer_application_name": {
            "type": "string"
          },
          "video_title": {
            "type": "string"
          },
          "total_row_count": {
            "type": "integer",
            "format": "int64"
          },
          "player_error_message": {
            "type": "string"
          },
          "player_error_code": {
            "type": "string"
          },
          "error_type_id": {
            "type": "integer",
            "format": "int32"
          },
          "country_code": {
            "type": "string"
          },
          "view_start": {
            "type": "string"
          },
          "view_end": {
            "type": "string"
          }
        }
      },
      "VideoViewEvent": {
        "type": "object",
        "properties": {
          "viewer_time": {
            "type": "integer",
            "format": "int64"
          },
          "playback_time": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "event_time": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MaxContinuousDuration": {
        "type": "integer",
        "format": "int32",
        "default": 43200,
        "minimum": 60,
        "maximum": 43200,
        "description": "The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."
      }
    },
    "parameters": {
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Number of items to include in the response",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 25
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "description": "Offset by this many pages, of the size of `limit`",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 1
        }
      },
      "stream_key": {
        "name": "stream_key",
        "in": "query",
        "description": "Filter response to return live stream for this stream key only",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "viewer_id": {
        "name": "viewer_id",
        "in": "query",
        "description": "Viewer ID to filter results by. This value may be provided by the integration, or may be created by Mux.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "error_id": {
        "name": "error_id",
        "in": "query",
        "description": "Filter video views by the provided error ID (as returned in the error_type_id field in the list video views endpoint). If you provide any as the error ID, this will filter the results to those with any error.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "order_direction": {
        "name": "order_direction",
        "in": "query",
        "description": "Sort order.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        }
      },
      "order_direction_deprecated": {
        "name": "order_direction",
        "in": "query",
        "description": "Sort order.",
        "deprecated": true,
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        }
      },
      "measurement": {
        "name": "measurement",
        "in": "query",
        "description": "Measurement for the provided metric. If omitted, the default for the metric will be used.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "95th",
            "median",
            "avg",
            "count",
            "sum"
          ]
        }
      },
      "order_by": {
        "name": "order_by",
        "in": "query",
        "description": "Value to order the results by",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "negative_impact",
            "value",
            "views",
            "field"
          ]
        }
      },
      "group_by": {
        "name": "group_by",
        "in": "query",
        "description": "Breakdown value to group the results by",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asn",
            "browser",
            "browser_version",
            "cdn",
            "continent_code",
            "country",
            "exit_before_video_start",
            "experiment_name",
            "operating_system",
            "operating_system_version",
            "player_autoplay",
            "player_error_code",
            "player_mux_plugin_name",
            "player_mux_plugin_version",
            "player_name",
            "player_preload",
            "player_remote_played",
            "player_software",
            "player_software_version",
            "player_version",
            "preroll_ad_asset_hostname",
            "preroll_ad_tag_hostname",
            "preroll_played",
            "preroll_requested",
            "region",
            "source_hostname",
            "source_type",
            "stream_type",
            "sub_property_id",
            "video_encoding_variant",
            "video_id",
            "video_series",
            "video_title",
            "view_session_id",
            "viewer_connection_type",
            "viewer_device_category",
            "viewer_device_manufacturer",
            "viewer_device_model",
            "viewer_device_name",
            "viewer_user_id"
          ]
        }
      },
      "filters": {
        "name": "filters[]",
        "in": "query",
        "description": "Limit the results to rows that match conditions from provided key:value pairs. Must be provided as an array query string parameter.\n\nTo exclude rows that match a certain condition, prepend a `!` character to the dimension.\n\nPossible filter names are the same as returned by the List Filters endpoint.\n\nExample:\n\n  * `filters[]=operating_system:windows&filters[]=!country:US`\n",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "timeframe": {
        "name": "timeframe[]",
        "in": "query",
        "description": "Timeframe window to limit results by. Must be provided as an array query string parameter (e.g. timeframe[]=).\n\nAccepted formats are...\n\n  * array of epoch timestamps e.g. `timeframe[]=1498867200&timeframe[]=1498953600`\n  * duration string e.g. `timeframe[]=24:hours or timeframe[]=7:days`\n",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "timeseries_group_by": {
        "name": "group_by",
        "in": "query",
        "description": "Time granularity to group results by. If this value is omitted, a default granularity is chosen based on the timeframe.\n\nFor timeframes of 6 hours or less, the default granularity is `ten_minutes`. Between 6 hours and 15 hours inclusive, the default granularity is `hour`. The granularity of timeframes that exceed 15 hours is `day`. This default behaviour is subject to change; it is strongly suggested that you explicitly specify the granularity.\n",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "hour",
            "day"
          ]
        }
      },
      "dimension": {
        "name": "dimension",
        "in": "query",
        "description": "Dimension the specified value belongs to",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asn",
            "browser",
            "browser_version",
            "cdn",
            "continent_code",
            "country",
            "exit_before_video_start",
            "experiment_name",
            "operating_system",
            "operating_system_version",
            "player_autoplay",
            "player_error_code",
            "player_mux_plugin_name",
            "player_mux_plugin_version",
            "player_name",
            "player_preload",
            "player_remote_played",
            "player_software",
            "player_software_version",
            "player_version",
            "preroll_ad_asset_hostname",
            "preroll_ad_tag_hostname",
            "preroll_played",
            "preroll_requested",
            "region",
            "source_hostname",
            "source_type",
            "stream_type",
            "sub_property_id",
            "video_encoding_variant",
            "video_id",
            "video_series",
            "video_title",
            "view_session_id",
            "viewer_connection_type",
            "viewer_device_category",
            "viewer_device_manufacturer",
            "viewer_device_model",
            "viewer_device_name",
            "viewer_user_id"
          ]
        }
      },
      "value": {
        "name": "value",
        "in": "query",
        "description": "Value to show all available metrics for",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "delivery_usage_asset_id": {
        "name": "asset_id",
        "in": "query",
        "description": "Filter response to return delivery usage for this asset only. You cannot specify both the `asset_id` and `live_stream_id` parameters together.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "delivery_usage_live_stream_id": {
        "name": "live_stream_id",
        "in": "query",
        "description": "Filter response to return delivery usage for assets for this live stream. You cannot specify both the `asset_id` and `live_stream_id` parameters together.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "delivery_usage_timeframe": {
        "name": "timeframe[]",
        "in": "query",
        "description": "Time window to get delivery usage information. timeframe[0] indicates the start time, timeframe[1] indicates the end time in seconds since the Unix epoch. Default time window is 1 hour representing usage from 13th to 12th hour from when the request is made.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "delivery_usage_limit": {
        "name": "limit",
        "in": "query",
        "description": "Number of items to include in the response",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 100
        }
      },
      "incident_status": {
        "name": "status",
        "in": "query",
        "description": "Status to filter incidents by",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "closed",
            "expired"
          ]
        }
      },
      "severity": {
        "name": "severity",
        "in": "query",
        "description": "Severity to filter incidents by",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "warning",
            "alert"
          ]
        }
      },
      "realtime_dimension": {
        "name": "dimension",
        "in": "query",
        "description": "Dimension the specified value belongs to",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asn",
            "cdn",
            "country",
            "operating_system",
            "player_name",
            "region",
            "stream_type",
            "sub_property_id",
            "video_series",
            "video_title"
          ]
        }
      },
      "timestamp": {
        "name": "timestamp",
        "in": "query",
        "description": "Timestamp to limit results by. This value must be provided as a unix timestamp. Defaults to the current unix timestamp.",
        "required": false,
        "schema": {
          "type": "number",
          "format": "int32"
        }
      },
      "asset_id": {
        "name": "ASSET_ID",
        "in": "path",
        "description": "The asset ID.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "livestream_id": {
        "name": "LIVE_STREAM_ID",
        "in": "path",
        "description": "The live stream ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "playback_id": {
        "name": "PLAYBACK_ID",
        "in": "path",
        "description": "The live stream's playback ID.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "signing_key_id": {
        "name": "SIGNING_KEY_ID",
        "in": "path",
        "description": "The ID of the signing key.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "upload_id": {
        "name": "UPLOAD_ID",
        "in": "path",
        "description": "ID of the Upload",
        "required": true,
        "example": "abcd1234",
        "schema": {
          "type": "string"
        }
      },
      "playback_restriction_id": {
        "name": "PLAYBACK_RESTRICTION_ID",
        "in": "path",
        "description": "ID of the Playback Restriction.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "video_view_id": {
        "name": "VIDEO_VIEW_ID",
        "in": "path",
        "description": "ID of the Video View",
        "required": true,
        "example": "abcd1234",
        "schema": {
          "type": "string"
        }
      },
      "filter_id": {
        "name": "FILTER_ID",
        "in": "path",
        "description": "ID of the Filter",
        "required": true,
        "example": "abcd1234",
        "schema": {
          "type": "string"
        }
      },
      "dimension_id": {
        "name": "DIMENSION_ID",
        "in": "path",
        "description": "ID of the Dimension",
        "required": true,
        "example": "abcd1234",
        "schema": {
          "type": "string"
        }
      },
      "metric_id": {
        "name": "METRIC_ID",
        "in": "path",
        "description": "ID of the Metric",
        "required": true,
        "example": "video_startup_time",
        "schema": {
          "type": "string",
          "enum": [
            "aggregate_startup_time",
            "downscale_percentage",
            "exits_before_video_start",
            "max_downscale_percentage",
            "max_upscale_percentage",
            "page_load_time",
            "playback_failure_percentage",
            "playback_failure_score",
            "player_startup_time",
            "playing_time",
            "rebuffer_count",
            "rebuffer_duration",
            "rebuffer_frequency",
            "rebuffer_percentage",
            "rebuffer_score",
            "requests_for_first_preroll",
            "seek_latency",
            "startup_time_score",
            "unique_viewers",
            "upscale_percentage",
            "video_quality_score",
            "video_startup_preroll_load_time",
            "video_startup_preroll_request_time",
            "video_startup_time",
            "viewer_experience_score",
            "views",
            "weighted_average_bitrate"
          ]
        }
      },
      "simulcast_target_id": {
        "name": "SIMULCAST_TARGET_ID",
        "in": "path",
        "description": "The ID of the simulcast target.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "track_id": {
        "name": "TRACK_ID",
        "in": "path",
        "description": "The track ID.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "realtime_metric_id": {
        "name": "REALTIME_METRIC_ID",
        "in": "path",
        "description": "ID of the Realtime Metric",
        "required": true,
        "example": "current-concurrent-viewers",
        "schema": {
          "type": "string",
          "enum": [
            "current-concurrent-viewers",
            "current-rebuffering-percentage",
            "exits-before-video-start",
            "playback-failure-percentage",
            "current-average-bitrate"
          ]
        }
      },
      "realtime_histogram_metric_id": {
        "name": "REALTIME_HISTOGRAM_METRIC_ID",
        "in": "path",
        "description": "ID of the Realtime Histogram Metric",
        "required": true,
        "example": "video-startup-time",
        "schema": {
          "type": "string",
          "enum": [
            "video-startup-time"
          ]
        }
      },
      "incident_id": {
        "name": "INCIDENT_ID",
        "in": "path",
        "description": "ID of the Incident",
        "required": true,
        "example": "abcd1234",
        "schema": {
          "type": "string"
        }
      },
      "list_asset_upload_id": {
        "name": "upload_id",
        "in": "query",
        "description": "Filter response to return an asset created from this direct upload only",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "list_asset_live_stream_id": {
        "name": "live_stream_id",
        "in": "query",
        "description": "Filter response to return all the assets for this live stream only",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "accessToken": {
        "description": "The Mux Video API uses an Access Token and Secret Key for authentication. If you haven't already, [generate a new Access Token](https://dashboard.mux.com/settings/access-tokens) in the Access Token settings of your Mux account dashboard.\n\nOnce you have an Access Token ID and Secret, you can then simply include those as the username (id) and password (secret) in the same way you use traditional basic auth.\n",
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "tags": [
    {
      "name": "Assets",
      "description": "An asset refers to a piece of media content that is stored or is being live streamed through the Mux system. An asset always has a duration and one or more tracks (audio, video, and text data).\n\nThe media content of an asset cannot be updated once created, however an asset can be used to create another asset, and can be modified within that process."
    },
    {
      "name": "Live Streams",
      "description": "A Live Stream represents a unique live stream of video being pushed to Mux. It includes configuration details (a Stream Key) for live broadcasting software/hardware and a Playback ID for playing the stream anywhere. Currently, RTMP is the only supported method of ingesting video. Use rtmp://global-live.mux.com:5222/app with the Live Stream's Stream Key for getting the video into Mux, and use https://stream.mux.com with the Live Stream's Playback ID for playback.\n\nA Live Stream can be used once for a specific event, or re-used forever. If you're building an application like Facebook Live or Twitch, you could create one Live Stream per user. This allows them to configure their broadcasting software once, and the Live Stream Playback ID will always show their latest stream.\n\nEach RTMP session creates a new video asset automatically. You can set up a webhook to be notified each time a broadcast (or Live Stream RTMP session) begins or ends with the video.live_stream.active and video.live_stream.idle events respectively. Assets that are created from a Live Stream have the same behavior as other Assets you create.\n\nLearn more about [how to go live in our guides](https://docs.mux.com/docs/live-streaming)."
    },
    {
      "name": "URL Signing Keys",
      "description": "A URL signing key is used as the secret when signing any Mux URL. Mux requires a [JSON Web Token](https://jwt.io/) as the value of the token query parameter. The token query parameter must be set for URLs that reference a playback ID with a signed playback policy."
    },
    {
      "name": "Direct Upload",
      "description": "Direct upload allows you to push assets directly to Mux storage instead of needing to go through your own first. When you create a new direct upload, we'll give you back a signed URL for a Google Cloud Storage bucket. Their storage API is S3 compatible, so whatever tool you use to upload to either GCS or S3 should work, just remember you're probably uploading large video files and should [take advantage of things like resumable or multipart uploads](https://cloud.google.com/storage/docs/json_api/v1/how-tos/resumable-upload).\n\nParticularly for customers that deal with a lot of user-generated content, it's common to expect quite a few abandoned uploads. To keep those abandoned uploads from cluttering up your asset lists, we don't create an asset for you until the upload is complete. Once that asset is created, you can expect all of the normal asset-related webhooks."
    },
    {
      "name": "Delivery Usage",
      "description": "The Delivery Usage API allows you to get delivery/streaming usage details for each asset and across all assets. Delivery usage details are aggregated every hour at the top of the hour and can be requested for a specified time window within the last 90 days starting at 12 hours prior to when the request is made.\n\nAssets are ordered by delivery usage starting with the one with the highest usage. Only assets with delivery usage greater than 0 seconds are returned in the response."
    },
    {
      "name": "Playback Restrictions",
      "description": "Playback Restrictions allows you to set additional rules for playing videos. You can set the domains/hostnames allowed to play your videos. For instance, viewers can play videos embedded on the `https://example.com` website when you set the Playback Restrictions with `example.com` as an allowed domain. Any Video requests from other websites are denied."
    },
    {
      "name": "Video Views",
      "description": "An individual video view tracked by Mux Data. For the full list of properties for each view please refer to the table of data fields in the [Export raw video view data guide](https://docs.mux.com/guides/data/export-raw-video-view-data)."
    },
    {
      "name": "Errors",
      "description": "A list of playback errors detected by Mux Data."
    }
  ],
  "x-tagGroups": [
    {
      "name": "Video",
      "tags": [
        "Assets",
        "Live Streams",
        "Playback ID",
        "URL Signing Keys",
        "Direct Uploads",
        "Delivery Usage",
        "Playback Restrictions"
      ]
    },
    {
      "name": "Data",
      "tags": [
        "Video Views",
        "Errors",
        "Filters",
        "Exports",
        "Metrics",
        "Real-Time",
        "Dimensions",
        "Incidents"
      ]
    }
  ]
}
